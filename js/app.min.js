!function t(e,n,i){function o(s,u){if(!n[s]){if(!e[s]){var c="function"==typeof require&&require;if(!u&&c)return c(s,!0);if(r)return r(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var a=n[s]={exports:{}};e[s][0].call(a.exports,function(t){var n=e[s][1][t];return o(n?n:t)},a,a.exports,t,e,n,i)}return n[s].exports}for(var r="function"==typeof require&&require,s=0;s<i.length;s++)o(i[s]);return o}({1:[function(t,e,n){!function(t,i){"use strict";"function"==typeof define&&define.amd?define([],i):"object"==typeof n?e.exports=i():t.Headroom=i()}(this,function(){"use strict";function t(t){this.callback=t,this.ticking=!1}function e(t){return t&&"undefined"!=typeof window&&(t===window||t.nodeType)}function n(t){if(arguments.length<=0)throw new Error("Missing arguments in extend function");var i,o,r=t||{};for(o=1;o<arguments.length;o++){var s=arguments[o]||{};for(i in s)"object"!=typeof r[i]||e(r[i])?r[i]=r[i]||s[i]:r[i]=n(r[i],s[i])}return r}function i(t){return t===Object(t)?t:{down:t,up:t}}function o(t,e){e=n(e,o.options),this.lastKnownScrollY=0,this.elem=t,this.tolerance=i(e.tolerance),this.classes=e.classes,this.offset=e.offset,this.scroller=e.scroller,this.initialised=!1,this.onPin=e.onPin,this.onUnpin=e.onUnpin,this.onTop=e.onTop,this.onNotTop=e.onNotTop,this.onBottom=e.onBottom,this.onNotBottom=e.onNotBottom}var r={bind:!!function(){}.bind,classList:"classList"in document.documentElement,rAF:!!(window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame)};return window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame,t.prototype={constructor:t,update:function(){this.callback&&this.callback(),this.ticking=!1},requestTick:function(){this.ticking||(requestAnimationFrame(this.rafCallback||(this.rafCallback=this.update.bind(this))),this.ticking=!0)},handleEvent:function(){this.requestTick()}},o.prototype={constructor:o,init:function(){if(o.cutsTheMustard)return this.debouncer=new t(this.update.bind(this)),this.elem.classList.add(this.classes.initial),setTimeout(this.attachEvent.bind(this),100),this},destroy:function(){var t=this.classes;this.initialised=!1,this.elem.classList.remove(t.unpinned,t.pinned,t.top,t.notTop,t.initial),this.scroller.removeEventListener("scroll",this.debouncer,!1)},attachEvent:function(){this.initialised||(this.lastKnownScrollY=this.getScrollY(),this.initialised=!0,this.scroller.addEventListener("scroll",this.debouncer,!1),this.debouncer.handleEvent())},unpin:function(){var t=this.elem.classList,e=this.classes;!t.contains(e.pinned)&&t.contains(e.unpinned)||(t.add(e.unpinned),t.remove(e.pinned),this.onUnpin&&this.onUnpin.call(this))},pin:function(){var t=this.elem.classList,e=this.classes;t.contains(e.unpinned)&&(t.remove(e.unpinned),t.add(e.pinned),this.onPin&&this.onPin.call(this))},top:function(){var t=this.elem.classList,e=this.classes;t.contains(e.top)||(t.add(e.top),t.remove(e.notTop),this.onTop&&this.onTop.call(this))},notTop:function(){var t=this.elem.classList,e=this.classes;t.contains(e.notTop)||(t.add(e.notTop),t.remove(e.top),this.onNotTop&&this.onNotTop.call(this))},bottom:function(){var t=this.elem.classList,e=this.classes;t.contains(e.bottom)||(t.add(e.bottom),t.remove(e.notBottom),this.onBottom&&this.onBottom.call(this))},notBottom:function(){var t=this.elem.classList,e=this.classes;t.contains(e.notBottom)||(t.add(e.notBottom),t.remove(e.bottom),this.onNotBottom&&this.onNotBottom.call(this))},getScrollY:function(){return void 0!==this.scroller.pageYOffset?this.scroller.pageYOffset:void 0!==this.scroller.scrollTop?this.scroller.scrollTop:(document.documentElement||document.body.parentNode||document.body).scrollTop},getViewportHeight:function(){return window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight},getElementPhysicalHeight:function(t){return Math.max(t.offsetHeight,t.clientHeight)},getScrollerPhysicalHeight:function(){return this.scroller===window||this.scroller===document.body?this.getViewportHeight():this.getElementPhysicalHeight(this.scroller)},getDocumentHeight:function(){var t=document.body,e=document.documentElement;return Math.max(t.scrollHeight,e.scrollHeight,t.offsetHeight,e.offsetHeight,t.clientHeight,e.clientHeight)},getElementHeight:function(t){return Math.max(t.scrollHeight,t.offsetHeight,t.clientHeight)},getScrollerHeight:function(){return this.scroller===window||this.scroller===document.body?this.getDocumentHeight():this.getElementHeight(this.scroller)},isOutOfBounds:function(t){var e=t<0,n=t+this.getScrollerPhysicalHeight()>this.getScrollerHeight();return e||n},toleranceExceeded:function(t,e){return Math.abs(t-this.lastKnownScrollY)>=this.tolerance[e]},shouldUnpin:function(t,e){var n=t>this.lastKnownScrollY,i=t>=this.offset;return n&&i&&e},shouldPin:function(t,e){var n=t<this.lastKnownScrollY,i=t<=this.offset;return n&&e||i},update:function(){var t=this.getScrollY(),e=t>this.lastKnownScrollY?"down":"up",n=this.toleranceExceeded(t,e);this.isOutOfBounds(t)||(t<=this.offset?this.top():this.notTop(),t+this.getViewportHeight()>=this.getScrollerHeight()?this.bottom():this.notBottom(),this.shouldUnpin(t,n)?this.unpin():this.shouldPin(t,n)&&this.pin(),this.lastKnownScrollY=t)}},o.options={tolerance:{up:0,down:0},offset:0,scroller:window,classes:{pinned:"headroom--pinned",unpinned:"headroom--unpinned",top:"headroom--top",notTop:"headroom--not-top",bottom:"headroom--bottom",notBottom:"headroom--not-bottom",initial:"headroom"}},o.cutsTheMustard="undefined"!=typeof r&&r.rAF&&r.bind&&r.classList,o})},{}],2:[function(t,e,n){!function(t,i){"object"==typeof n&&"object"==typeof e?e.exports=i():"function"==typeof define&&define.amd?define([],i):"object"==typeof n?n.inView=i():t.inView=i()}(this,function(){return function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return t[i].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}var o=n(3),r=i(o);t.exports=r.default},function(t,e){"use strict";function n(t,e){var n=t.getBoundingClientRect(),i=n.top,o=n.right,r=n.bottom,s=n.left,u={t:r,r:window.innerWidth-s,b:window.innerHeight-i,l:o};return u.t>e.top&&u.r>e.right&&u.b>e.bottom&&u.l>e.left}Object.defineProperty(e,"__esModule",{value:!0}),e.inViewport=n},function(t,e){function n(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=n},function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var o=n(9),r=i(o),s=n(4),u=i(s),c=n(1),l=function(){var t=100,e=["scroll","resize","load"],n={history:[]},i={},o=(0,r.default)(function(){n.history.forEach(function(t){n[t].check()})},t);e.forEach(function(t){return addEventListener(t,o)}),window.MutationObserver&&new MutationObserver(o).observe(document.body,{attributes:!0,childList:!0,subtree:!0});var s=function(t){if("string"==typeof t){var e=[].slice.call(document.querySelectorAll(t));return n.history.indexOf(t)>-1?n[t].elements=e:(n[t]=(0,u.default)(e,i),n.history.push(t)),n[t]}};return s.offset=function(t){if(void 0===t)return i;var e=function(t){return"number"==typeof t};return["top","right","bottom","left"].forEach(e(t)?function(e){return i[e]=t}:function(n){return e(t[n])?i[n]=t[n]:null}),i},s.is=function(t){return(0,c.inViewport)(t,i)},s.offset(0),s};e.default=l()},function(t,e,n){"use strict";function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var o=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=n(1),s=function(){function t(e,n){i(this,t),this.offset=n,this.current=[],this.elements=e,this.handlers={enter:[],exit:[]},this.singles={enter:[],exit:[]}}return o(t,[{key:"check",value:function(){var t=this;return this.elements.forEach(function(e){var n=(0,r.inViewport)(e,t.offset),i=t.current.indexOf(e),o=i>-1,s=n&&!o,u=!n&&o;s&&(t.current.push(e),t.emit("enter",e)),u&&(t.current.splice(i,1),t.emit("exit",e))}),this}},{key:"on",value:function(t,e){return this.handlers[t].push(e),this}},{key:"once",value:function(t,e){return this.singles[t].unshift(e),this}},{key:"emit",value:function(t,e){for(;this.singles[t].length;)this.singles[t].pop()(e);for(var n=this.handlers[t].length;--n>-1;)this.handlers[t][n](e);return this}}]),t}();e.default=function(t,e){return new s(t,e)}},function(t,e){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(e,function(){return this}())},function(t,e,n){var i=n(5),o="object"==typeof self&&self&&self.Object===Object&&self,r=i||o||Function("return this")();t.exports=r},function(t,e,n){function i(t,e,n){function i(e){var n=b,i=w;return b=w=void 0,E=e,x=t.apply(i,n)}function a(t){return E=t,T=setTimeout(d,e),_?i(t):x}function f(t){var n=t-k,i=t-E,o=e-n;return H?l(o,y-i):o}function h(t){var n=t-k,i=t-E;return void 0===k||n>=e||n<0||H&&i>=y}function d(){var t=r();return h(t)?p(t):void(T=setTimeout(d,f(t)))}function p(t){return T=void 0,O&&b?i(t):(b=w=void 0,x)}function m(){void 0!==T&&clearTimeout(T),E=0,b=k=w=T=void 0}function v(){return void 0===T?x:p(r())}function g(){var t=r(),n=h(t);if(b=arguments,w=this,k=t,n){if(void 0===T)return a(k);if(H)return T=setTimeout(d,e),i(k)}return void 0===T&&(T=setTimeout(d,e)),x}var b,w,y,x,T,k,E=0,_=!1,H=!1,O=!0;if("function"!=typeof t)throw new TypeError(u);return e=s(e)||0,o(n)&&(_=!!n.leading,H="maxWait"in n,y=H?c(s(n.maxWait)||0,e):y,O="trailing"in n?!!n.trailing:O),g.cancel=m,g.flush=v,g}var o=n(2),r=n(8),s=n(10),u="Expected a function",c=Math.max,l=Math.min;t.exports=i},function(t,e,n){var i=n(6),o=function(){return i.Date.now()};t.exports=o},function(t,e,n){function i(t,e,n){var i=!0,u=!0;if("function"!=typeof t)throw new TypeError(s);return r(n)&&(i="leading"in n?!!n.leading:i,u="trailing"in n?!!n.trailing:u),o(t,e,{leading:i,maxWait:e,trailing:u})}var o=n(7),r=n(2),s="Expected a function";t.exports=i},function(t,e){function n(t){return t}t.exports=n}])})},{}],3:[function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}var o=t("./controller/AppController"),r=i(o);new r.default},{"./controller/AppController":4}],4:[function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),s=t("../modules/router"),u=i(s),c=t("./ArticleController"),l=i(c),a=t("in-view"),f=i(a),h=function(){function t(){o(this,t),this.init(),this.routes()}return r(t,[{key:"init",value:function(){var t=this;(0,f.default)("[data-lazy-bg]").on("enter",function(e){return t.replaceBg(e)})}},{key:"routes",value:function(){new u.default("articles",l.default)}},{key:"replaceBg",value:function(t){var e=t.getAttribute("data-lazy-bg");t.style.backgroundImage="url("+e+")"}}]),t}();n.default=h},{"../modules/router":6,"./ArticleController":5,"in-view":2}],5:[function(t,e,n){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),s=t("headroom.js/dist/headroom.js"),u=i(s),c=t("in-view"),l=i(c),a=function(){function t(){o(this,t),this.instanciateStickyBars(),this.scrollSlider()}return r(t,[{key:"scrollSlider",value:function(){var t=this,e=(document.querySelectorAll(".fl-content__img"),document.querySelector(".fl-article-layout__left__view")),n=new l.default(".fl-content__img");console.log(n),n.on("enter",function(n,i){var o=n.getAttribute("data-src");window.innerWidth>768?t.setViewBg(o,e):n.src=o})}},{key:"setViewBg",value:function(t,e){e.style.backgroundImage="url("+t+")"}},{key:"instanciateStickyBars",value:function(){var t=document.querySelector(".fl-bar.fl-bar--top"),e=document.querySelector(".fl-bar.fl-bar--bottom"),n={tolerance:{down:10,up:0}},i=new u.default(t,n),o=new u.default(e,n);i.init(),o.init()}}]),t}();n.default=a},{"headroom.js/dist/headroom.js":1,"in-view":2}],6:[function(t,e,n){"use strict";function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),r=function(){function t(e,n){i(this,t),this.pathMatch(e)&&this.loadModule(n)}return o(t,[{key:"pathMatch",value:function(t){var e=!1,n=window.location.pathname.split("/");return n=n.length<2?"/":n[2],n===t&&(e=!0),e}},{key:"loadModule",value:function(t){new t}}]),t}();n.default=r},{}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvaGVhZHJvb20uanMvZGlzdC9oZWFkcm9vbS5qcyIsIm5vZGVfbW9kdWxlcy9pbi12aWV3L2Rpc3QvaW4tdmlldy5taW4uanMiLCJ0aGVtZXMvZmxpcC9zb3VyY2UvX2pzL2NsaWVudC9hcHAuanMiLCJ0aGVtZXMvZmxpcC9zb3VyY2UvX2pzL2NsaWVudC9jb250cm9sbGVyL0FwcENvbnRyb2xsZXIuanMiLCJ0aGVtZXMvZmxpcC9zb3VyY2UvX2pzL2NsaWVudC9jb250cm9sbGVyL0FydGljbGVDb250cm9sbGVyLmpzIiwidGhlbWVzL2ZsaXAvc291cmNlL19qcy9jbGllbnQvbW9kdWxlcy9yb3V0ZXIuanMiXSwibmFtZXMiOlsiZSIsInQiLCJuIiwiciIsInMiLCJvIiwidSIsImEiLCJyZXF1aXJlIiwiaSIsImYiLCJFcnJvciIsImNvZGUiLCJsIiwiZXhwb3J0cyIsImNhbGwiLCJsZW5ndGgiLCIxIiwibW9kdWxlIiwicm9vdCIsImZhY3RvcnkiLCJkZWZpbmUiLCJhbWQiLCJIZWFkcm9vbSIsInRoaXMiLCJEZWJvdW5jZXIiLCJjYWxsYmFjayIsInRpY2tpbmciLCJpc0RPTUVsZW1lbnQiLCJvYmoiLCJ3aW5kb3ciLCJub2RlVHlwZSIsImV4dGVuZCIsIm9iamVjdCIsImFyZ3VtZW50cyIsImtleSIsInJlc3VsdCIsInJlcGxhY2VtZW50Iiwibm9ybWFsaXplVG9sZXJhbmNlIiwiT2JqZWN0IiwiZG93biIsInVwIiwiZWxlbSIsIm9wdGlvbnMiLCJsYXN0S25vd25TY3JvbGxZIiwidG9sZXJhbmNlIiwiY2xhc3NlcyIsIm9mZnNldCIsInNjcm9sbGVyIiwiaW5pdGlhbGlzZWQiLCJvblBpbiIsIm9uVW5waW4iLCJvblRvcCIsIm9uTm90VG9wIiwib25Cb3R0b20iLCJvbk5vdEJvdHRvbSIsImZlYXR1cmVzIiwiYmluZCIsImNsYXNzTGlzdCIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwickFGIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwicHJvdG90eXBlIiwiY29uc3RydWN0b3IiLCJ1cGRhdGUiLCJyZXF1ZXN0VGljayIsInJhZkNhbGxiYWNrIiwiaGFuZGxlRXZlbnQiLCJpbml0IiwiY3V0c1RoZU11c3RhcmQiLCJkZWJvdW5jZXIiLCJhZGQiLCJpbml0aWFsIiwic2V0VGltZW91dCIsImF0dGFjaEV2ZW50IiwiZGVzdHJveSIsInJlbW92ZSIsInVucGlubmVkIiwicGlubmVkIiwidG9wIiwibm90VG9wIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdldFNjcm9sbFkiLCJhZGRFdmVudExpc3RlbmVyIiwidW5waW4iLCJjb250YWlucyIsInBpbiIsImJvdHRvbSIsIm5vdEJvdHRvbSIsInVuZGVmaW5lZCIsInBhZ2VZT2Zmc2V0Iiwic2Nyb2xsVG9wIiwiYm9keSIsInBhcmVudE5vZGUiLCJnZXRWaWV3cG9ydEhlaWdodCIsImlubmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiZ2V0RWxlbWVudFBoeXNpY2FsSGVpZ2h0IiwiZWxtIiwiTWF0aCIsIm1heCIsIm9mZnNldEhlaWdodCIsImdldFNjcm9sbGVyUGh5c2ljYWxIZWlnaHQiLCJnZXREb2N1bWVudEhlaWdodCIsInNjcm9sbEhlaWdodCIsImdldEVsZW1lbnRIZWlnaHQiLCJnZXRTY3JvbGxlckhlaWdodCIsImlzT3V0T2ZCb3VuZHMiLCJjdXJyZW50U2Nyb2xsWSIsInBhc3RUb3AiLCJwYXN0Qm90dG9tIiwidG9sZXJhbmNlRXhjZWVkZWQiLCJkaXJlY3Rpb24iLCJhYnMiLCJzaG91bGRVbnBpbiIsInNjcm9sbGluZ0Rvd24iLCJwYXN0T2Zmc2V0Iiwic2hvdWxkUGluIiwic2Nyb2xsaW5nVXAiLCJzY3JvbGxEaXJlY3Rpb24iLCJpblZpZXciLCJpZCIsImxvYWRlZCIsIm0iLCJjIiwicCIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicmlnaHQiLCJsZWZ0IiwiaW5uZXJXaWR0aCIsImIiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiaW5WaWV3cG9ydCIsImhpc3RvcnkiLCJmb3JFYWNoIiwiY2hlY2siLCJNdXRhdGlvbk9ic2VydmVyIiwib2JzZXJ2ZSIsImF0dHJpYnV0ZXMiLCJjaGlsZExpc3QiLCJzdWJ0cmVlIiwic2xpY2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5kZXhPZiIsImVsZW1lbnRzIiwicHVzaCIsImlzIiwiVHlwZUVycm9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiY3VycmVudCIsImhhbmRsZXJzIiwiZW50ZXIiLCJleGl0Iiwic2luZ2xlcyIsImVtaXQiLCJzcGxpY2UiLCJ1bnNoaWZ0IiwicG9wIiwic2VsZiIsIkZ1bmN0aW9uIiwieCIsIkUiLCJ3IiwiYXBwbHkiLCJqIiwiaCIsIl8iLCJPIiwiTSIsImciLCJkIiwiVCIsInYiLCJjbGVhclRpbWVvdXQiLCJ5IiwibGVhZGluZyIsIm1heFdhaXQiLCJ0cmFpbGluZyIsImNhbmNlbCIsImZsdXNoIiwibWluIiwiRGF0ZSIsIm5vdyIsIl9BcHBDb250cm9sbGVyIiwiX0FwcENvbnRyb2xsZXIyIiwiX3JvdXRlciIsIl9BcnRpY2xlQ29udHJvbGxlciIsIl9pblZpZXciLCJBcHBDb250cm9sbGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwicm91dGVzIiwiX3RoaXMiLCJfaW5WaWV3MiIsIm9uIiwiZWwiLCJyZXBsYWNlQmciLCJfcm91dGVyMiIsIl9BcnRpY2xlQ29udHJvbGxlcjIiLCJ0YXJnZXQiLCJkYXRhIiwiZ2V0QXR0cmlidXRlIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJfaGVhZHJvb20iLCJBcnRpY2xlQ29udHJvbGxlciIsImluc3RhbmNpYXRlU3RpY2t5QmFycyIsInNjcm9sbFNsaWRlciIsInZpZXciLCJxdWVyeVNlbGVjdG9yIiwiaXRlbXMiLCJjb25zb2xlIiwibG9nIiwic3JjIiwic2V0Vmlld0JnIiwiaGVhZGVyIiwiZm9vdGVyIiwiaGVhZHJvb21PcHRpb25zIiwic3RpY2t5SGVhZGVyIiwiX2hlYWRyb29tMiIsInN0aWNreUZvb3RlciIsIlJvdXRlck1vZHVsZSIsIm1hdGNoIiwicGF0aE1hdGNoIiwibG9hZE1vZHVsZSIsIm1hdGNoZXMiLCJwYXRoIiwibG9jYXRpb24iLCJwYXRobmFtZSIsInNwbGl0Il0sIm1hcHBpbmdzIjoiQ0FBQSxRQUFBQSxHQUFBQyxFQUFBQyxFQUFBQyxHQUFBLFFBQUFDLEdBQUFDLEVBQUFDLEdBQUEsSUFBQUosRUFBQUcsR0FBQSxDQUFBLElBQUFKLEVBQUFJLEdBQUEsQ0FBQSxHQUFBRSxHQUFBLGtCQUFBQyxVQUFBQSxPQUFBLEtBQUFGLEdBQUFDLEVBQUEsTUFBQUEsR0FBQUYsR0FBQSxFQUFBLElBQUFJLEVBQUEsTUFBQUEsR0FBQUosR0FBQSxFQUFBLElBQUFLLEdBQUEsR0FBQUMsT0FBQSx1QkFBQU4sRUFBQSxJQUFBLE1BQUFLLEdBQUFFLEtBQUEsbUJBQUFGLEVBQUEsR0FBQUcsR0FBQVgsRUFBQUcsSUFBQVMsV0FBQWIsR0FBQUksR0FBQSxHQUFBVSxLQUFBRixFQUFBQyxRQUFBLFNBQUFkLEdBQUEsR0FBQUUsR0FBQUQsRUFBQUksR0FBQSxHQUFBTCxFQUFBLE9BQUFJLEdBQUFGLEVBQUFBLEVBQUFGLElBQUFhLEVBQUFBLEVBQUFDLFFBQUFkLEVBQUFDLEVBQUFDLEVBQUFDLEdBQUEsTUFBQUQsR0FBQUcsR0FBQVMsUUFBQSxJQUFBLEdBQUFMLEdBQUEsa0JBQUFELFVBQUFBLFFBQUFILEVBQUEsRUFBQUEsRUFBQUYsRUFBQWEsT0FBQVgsSUFBQUQsRUFBQUQsRUFBQUUsR0FBQSxPQUFBRCxLQUFBYSxHQUFBLFNBQUFULEVBQUFVLEVBQUFKLElDTUEsU0FBQUssRUFBQUMsR0FDQSxZQUVBLG1CQUFBQyxTQUFBQSxPQUFBQyxJQUVBRCxVQUFBRCxHQUVBLGdCQUFBTixHQUVBSSxFQUFBSixRQUFBTSxJQUlBRCxFQUFBSSxTQUFBSCxLQUVBSSxLQUFBLFdBQ0EsWUFnQkEsU0FBQUMsR0FBQUMsR0FDQUYsS0FBQUUsU0FBQUEsRUFDQUYsS0FBQUcsU0FBQSxFQXFDQSxRQUFBQyxHQUFBQyxHQUNBLE1BQUFBLElBQUEsbUJBQUFDLFVBQUFELElBQUFDLFFBQUFELEVBQUFFLFVBTUEsUUFBQUMsR0FBQUMsR0FDQSxHQUFBQyxVQUFBbEIsUUFBQSxFQUNBLEtBQUEsSUFBQUwsT0FBQSx1Q0FHQSxJQUNBd0IsR0FDQTFCLEVBRkEyQixFQUFBSCxLQUlBLEtBQUF4QixFQUFBLEVBQUFBLEVBQUF5QixVQUFBbEIsT0FBQVAsSUFBQSxDQUNBLEdBQUE0QixHQUFBSCxVQUFBekIsTUFFQSxLQUFBMEIsSUFBQUUsR0FFQSxnQkFBQUQsR0FBQUQsSUFBQVAsRUFBQVEsRUFBQUQsSUFJQUMsRUFBQUQsR0FBQUMsRUFBQUQsSUFBQUUsRUFBQUYsR0FIQUMsRUFBQUQsR0FBQUgsRUFBQUksRUFBQUQsR0FBQUUsRUFBQUYsSUFRQSxNQUFBQyxHQU1BLFFBQUFFLEdBQUFyQyxHQUNBLE1BQUFBLEtBQUFzQyxPQUFBdEMsR0FBQUEsR0FBQXVDLEtBQUF2QyxFQUFBd0MsR0FBQXhDLEdBV0EsUUFBQXNCLEdBQUFtQixFQUFBQyxHQUNBQSxFQUFBWCxFQUFBVyxFQUFBcEIsRUFBQW9CLFNBRUFuQixLQUFBb0IsaUJBQUEsRUFDQXBCLEtBQUFrQixLQUFBQSxFQUNBbEIsS0FBQXFCLFVBQUFQLEVBQUFLLEVBQUFFLFdBQ0FyQixLQUFBc0IsUUFBQUgsRUFBQUcsUUFDQXRCLEtBQUF1QixPQUFBSixFQUFBSSxPQUNBdkIsS0FBQXdCLFNBQUFMLEVBQUFLLFNBQ0F4QixLQUFBeUIsYUFBQSxFQUNBekIsS0FBQTBCLE1BQUFQLEVBQUFPLE1BQ0ExQixLQUFBMkIsUUFBQVIsRUFBQVEsUUFDQTNCLEtBQUE0QixNQUFBVCxFQUFBUyxNQUNBNUIsS0FBQTZCLFNBQUFWLEVBQUFVLFNBQ0E3QixLQUFBOEIsU0FBQVgsRUFBQVcsU0FDQTlCLEtBQUErQixZQUFBWixFQUFBWSxZQWxIQSxHQUFBQyxJQUNBQyxPQUFBLGFBQUEsS0FDQUMsVUFBQSxhQUFBQyxVQUFBQyxnQkFDQUMsT0FBQS9CLE9BQUFnQyx1QkFBQWhDLE9BQUFpQyw2QkFBQWpDLE9BQUFrQywwQkE4YUEsT0E1YUFsQyxRQUFBZ0Msc0JBQUFoQyxPQUFBZ0MsdUJBQUFoQyxPQUFBaUMsNkJBQUFqQyxPQUFBa0MseUJBV0F2QyxFQUFBd0MsV0FDQUMsWUFBQXpDLEVBTUEwQyxPQUFBLFdBQ0EzQyxLQUFBRSxVQUFBRixLQUFBRSxXQUNBRixLQUFBRyxTQUFBLEdBT0F5QyxZQUFBLFdBQ0E1QyxLQUFBRyxVQUNBbUMsc0JBQUF0QyxLQUFBNkMsY0FBQTdDLEtBQUE2QyxZQUFBN0MsS0FBQTJDLE9BQUFWLEtBQUFqQyxRQUNBQSxLQUFBRyxTQUFBLElBT0EyQyxZQUFBLFdBQ0E5QyxLQUFBNEMsZ0JBeUVBN0MsRUFBQTBDLFdBQ0FDLFlBQUEzQyxFQUtBZ0QsS0FBQSxXQUNBLEdBQUFoRCxFQUFBaUQsZUFXQSxNQVBBaEQsTUFBQWlELFVBQUEsR0FBQWhELEdBQUFELEtBQUEyQyxPQUFBVixLQUFBakMsT0FDQUEsS0FBQWtCLEtBQUFnQixVQUFBZ0IsSUFBQWxELEtBQUFzQixRQUFBNkIsU0FJQUMsV0FBQXBELEtBQUFxRCxZQUFBcEIsS0FBQWpDLE1BQUEsS0FFQUEsTUFNQXNELFFBQUEsV0FDQSxHQUFBaEMsR0FBQXRCLEtBQUFzQixPQUVBdEIsTUFBQXlCLGFBQUEsRUFDQXpCLEtBQUFrQixLQUFBZ0IsVUFBQXFCLE9BQUFqQyxFQUFBa0MsU0FBQWxDLEVBQUFtQyxPQUFBbkMsRUFBQW9DLElBQUFwQyxFQUFBcUMsT0FBQXJDLEVBQUE2QixTQUNBbkQsS0FBQXdCLFNBQUFvQyxvQkFBQSxTQUFBNUQsS0FBQWlELFdBQUEsSUFPQUksWUFBQSxXQUNBckQsS0FBQXlCLGNBQ0F6QixLQUFBb0IsaUJBQUFwQixLQUFBNkQsYUFDQTdELEtBQUF5QixhQUFBLEVBQ0F6QixLQUFBd0IsU0FBQXNDLGlCQUFBLFNBQUE5RCxLQUFBaUQsV0FBQSxHQUVBakQsS0FBQWlELFVBQUFILGdCQU9BaUIsTUFBQSxXQUNBLEdBQUE3QixHQUFBbEMsS0FBQWtCLEtBQUFnQixVQUNBWixFQUFBdEIsS0FBQXNCLFNBRUFZLEVBQUE4QixTQUFBMUMsRUFBQW1DLFNBQUF2QixFQUFBOEIsU0FBQTFDLEVBQUFrQyxZQUNBdEIsRUFBQWdCLElBQUE1QixFQUFBa0MsVUFDQXRCLEVBQUFxQixPQUFBakMsRUFBQW1DLFFBQ0F6RCxLQUFBMkIsU0FBQTNCLEtBQUEyQixRQUFBcEMsS0FBQVMsUUFPQWlFLElBQUEsV0FDQSxHQUFBL0IsR0FBQWxDLEtBQUFrQixLQUFBZ0IsVUFDQVosRUFBQXRCLEtBQUFzQixPQUVBWSxHQUFBOEIsU0FBQTFDLEVBQUFrQyxZQUNBdEIsRUFBQXFCLE9BQUFqQyxFQUFBa0MsVUFDQXRCLEVBQUFnQixJQUFBNUIsRUFBQW1DLFFBQ0F6RCxLQUFBMEIsT0FBQTFCLEtBQUEwQixNQUFBbkMsS0FBQVMsUUFPQTBELElBQUEsV0FDQSxHQUFBeEIsR0FBQWxDLEtBQUFrQixLQUFBZ0IsVUFDQVosRUFBQXRCLEtBQUFzQixPQUVBWSxHQUFBOEIsU0FBQTFDLEVBQUFvQyxPQUNBeEIsRUFBQWdCLElBQUE1QixFQUFBb0MsS0FDQXhCLEVBQUFxQixPQUFBakMsRUFBQXFDLFFBQ0EzRCxLQUFBNEIsT0FBQTVCLEtBQUE0QixNQUFBckMsS0FBQVMsUUFPQTJELE9BQUEsV0FDQSxHQUFBekIsR0FBQWxDLEtBQUFrQixLQUFBZ0IsVUFDQVosRUFBQXRCLEtBQUFzQixPQUVBWSxHQUFBOEIsU0FBQTFDLEVBQUFxQyxVQUNBekIsRUFBQWdCLElBQUE1QixFQUFBcUMsUUFDQXpCLEVBQUFxQixPQUFBakMsRUFBQW9DLEtBQ0ExRCxLQUFBNkIsVUFBQTdCLEtBQUE2QixTQUFBdEMsS0FBQVMsUUFJQWtFLE9BQUEsV0FDQSxHQUFBaEMsR0FBQWxDLEtBQUFrQixLQUFBZ0IsVUFDQVosRUFBQXRCLEtBQUFzQixPQUVBWSxHQUFBOEIsU0FBQTFDLEVBQUE0QyxVQUNBaEMsRUFBQWdCLElBQUE1QixFQUFBNEMsUUFDQWhDLEVBQUFxQixPQUFBakMsRUFBQTZDLFdBQ0FuRSxLQUFBOEIsVUFBQTlCLEtBQUE4QixTQUFBdkMsS0FBQVMsUUFPQW1FLFVBQUEsV0FDQSxHQUFBakMsR0FBQWxDLEtBQUFrQixLQUFBZ0IsVUFDQVosRUFBQXRCLEtBQUFzQixPQUVBWSxHQUFBOEIsU0FBQTFDLEVBQUE2QyxhQUNBakMsRUFBQWdCLElBQUE1QixFQUFBNkMsV0FDQWpDLEVBQUFxQixPQUFBakMsRUFBQTRDLFFBQ0FsRSxLQUFBK0IsYUFBQS9CLEtBQUErQixZQUFBeEMsS0FBQVMsUUFTQTZELFdBQUEsV0FDQSxNQUFBTyxVQUFBcEUsS0FBQXdCLFNBQUE2QyxZQUNBckUsS0FBQXdCLFNBQUE2QyxZQUNBRCxTQUFBcEUsS0FBQXdCLFNBQUE4QyxVQUNBdEUsS0FBQXdCLFNBQUE4QyxXQUNBbkMsU0FBQUMsaUJBQUFELFNBQUFvQyxLQUFBQyxZQUFBckMsU0FBQW9DLE1BQUFELFdBUUFHLGtCQUFBLFdBQ0EsTUFBQW5FLFFBQUFvRSxhQUNBdkMsU0FBQUMsZ0JBQUF1QyxjQUNBeEMsU0FBQW9DLEtBQUFJLGNBUUFDLHlCQUFBLFNBQUFDLEdBQ0EsTUFBQUMsTUFBQUMsSUFDQUYsRUFBQUcsYUFDQUgsRUFBQUYsZUFRQU0sMEJBQUEsV0FDQSxNQUFBakYsTUFBQXdCLFdBQUFsQixRQUFBTixLQUFBd0IsV0FBQVcsU0FBQW9DLEtBQ0F2RSxLQUFBeUUsb0JBQ0F6RSxLQUFBNEUseUJBQUE1RSxLQUFBd0IsV0FRQTBELGtCQUFBLFdBQ0EsR0FBQVgsR0FBQXBDLFNBQUFvQyxLQUNBbkMsRUFBQUQsU0FBQUMsZUFFQSxPQUFBMEMsTUFBQUMsSUFDQVIsRUFBQVksYUFBQS9DLEVBQUErQyxhQUNBWixFQUFBUyxhQUFBNUMsRUFBQTRDLGFBQ0FULEVBQUFJLGFBQUF2QyxFQUFBdUMsZUFTQVMsaUJBQUEsU0FBQVAsR0FDQSxNQUFBQyxNQUFBQyxJQUNBRixFQUFBTSxhQUNBTixFQUFBRyxhQUNBSCxFQUFBRixlQVFBVSxrQkFBQSxXQUNBLE1BQUFyRixNQUFBd0IsV0FBQWxCLFFBQUFOLEtBQUF3QixXQUFBVyxTQUFBb0MsS0FDQXZFLEtBQUFrRixvQkFDQWxGLEtBQUFvRixpQkFBQXBGLEtBQUF3QixXQVFBOEQsY0FBQSxTQUFBQyxHQUNBLEdBQUFDLEdBQUFELEVBQUEsRUFDQUUsRUFBQUYsRUFBQXZGLEtBQUFpRiw0QkFBQWpGLEtBQUFxRixtQkFFQSxPQUFBRyxJQUFBQyxHQVFBQyxrQkFBQSxTQUFBSCxFQUFBSSxHQUNBLE1BQUFiLE1BQUFjLElBQUFMLEVBQUF2RixLQUFBb0IsbUJBQUFwQixLQUFBcUIsVUFBQXNFLElBU0FFLFlBQUEsU0FBQU4sRUFBQUcsR0FDQSxHQUFBSSxHQUFBUCxFQUFBdkYsS0FBQW9CLGlCQUNBMkUsRUFBQVIsR0FBQXZGLEtBQUF1QixNQUVBLE9BQUF1RSxJQUFBQyxHQUFBTCxHQVNBTSxVQUFBLFNBQUFULEVBQUFHLEdBQ0EsR0FBQU8sR0FBQVYsRUFBQXZGLEtBQUFvQixpQkFDQTJFLEVBQUFSLEdBQUF2RixLQUFBdUIsTUFFQSxPQUFBMEUsSUFBQVAsR0FBQUssR0FNQXBELE9BQUEsV0FDQSxHQUFBNEMsR0FBQXZGLEtBQUE2RCxhQUNBcUMsRUFBQVgsRUFBQXZGLEtBQUFvQixpQkFBQSxPQUFBLEtBQ0FzRSxFQUFBMUYsS0FBQTBGLGtCQUFBSCxFQUFBVyxFQUVBbEcsTUFBQXNGLGNBQUFDLEtBSUFBLEdBQUF2RixLQUFBdUIsT0FDQXZCLEtBQUEwRCxNQUVBMUQsS0FBQTJELFNBR0E0QixFQUFBdkYsS0FBQXlFLHFCQUFBekUsS0FBQXFGLG9CQUNBckYsS0FBQWtFLFNBR0FsRSxLQUFBbUUsWUFHQW5FLEtBQUE2RixZQUFBTixFQUFBRyxHQUNBMUYsS0FBQStELFFBRUEvRCxLQUFBZ0csVUFBQVQsRUFBQUcsSUFDQTFGLEtBQUFpRSxNQUdBakUsS0FBQW9CLGlCQUFBbUUsS0FPQXhGLEVBQUFvQixTQUNBRSxXQUNBSixHQUFBLEVBQ0FELEtBQUEsR0FFQU8sT0FBQSxFQUNBQyxTQUFBbEIsT0FDQWdCLFNBQ0FtQyxPQUFBLG1CQUNBRCxTQUFBLHFCQUNBRSxJQUFBLGdCQUNBQyxPQUFBLG9CQUNBTyxPQUFBLG1CQUNBQyxVQUFBLHVCQUNBaEIsUUFBQSxhQUdBcEQsRUFBQWlELGVBQUEsbUJBQUFoQixJQUFBQSxFQUFBSyxLQUFBTCxFQUFBQyxNQUFBRCxFQUFBRSxVQUVBbkMsNkJDdGNBLFNBQUF0QixFQUFBRCxHQUFBLGdCQUFBYyxJQUFBLGdCQUFBSSxHQUFBQSxFQUFBSixRQUFBZCxJQUFBLGtCQUFBcUIsU0FBQUEsT0FBQUMsSUFBQUQsVUFBQXJCLEdBQUEsZ0JBQUFjLEdBQUFBLEVBQUE2RyxPQUFBM0gsSUFBQUMsRUFBQTBILE9BQUEzSCxLQUFBd0IsS0FBQSxXQUFBLE1BQUEsVUFBQXZCLEdBQUEsUUFBQUQsR0FBQUcsR0FBQSxHQUFBRCxFQUFBQyxHQUFBLE1BQUFELEdBQUFDLEdBQUFXLE9BQUEsSUFBQUwsR0FBQVAsRUFBQUMsSUFBQVcsV0FBQThHLEdBQUF6SCxFQUFBMEgsUUFBQSxFQUFBLE9BQUE1SCxHQUFBRSxHQUFBWSxLQUFBTixFQUFBSyxRQUFBTCxFQUFBQSxFQUFBSyxRQUFBZCxHQUFBUyxFQUFBb0gsUUFBQSxFQUFBcEgsRUFBQUssUUFBQSxHQUFBWixLQUFBLE9BQUFGLEdBQUE4SCxFQUFBN0gsRUFBQUQsRUFBQStILEVBQUE3SCxFQUFBRixFQUFBZ0ksRUFBQSxHQUFBaEksRUFBQSxLQUFBLFNBQUFDLEVBQUFELEVBQUFFLEdBQUEsWUFBQSxTQUFBQyxHQUFBRixHQUFBLE1BQUFBLElBQUFBLEVBQUFnSSxXQUFBaEksR0FBQWlJLFFBQUFqSSxHQUFBLEdBQUFRLEdBQUFQLEVBQUEsR0FBQUcsRUFBQUYsRUFBQU0sRUFBQVIsR0FBQWEsUUFBQVQsRUFBQSxTQUFBLFNBQUFKLEVBQUFELEdBQUEsWUFBQSxTQUFBRSxHQUFBRCxFQUFBRCxHQUFBLEdBQUFFLEdBQUFELEVBQUFrSSx3QkFBQWhJLEVBQUFELEVBQUFnRixJQUFBekUsRUFBQVAsRUFBQWtJLE1BQUEvSCxFQUFBSCxFQUFBd0YsT0FBQXBGLEVBQUFKLEVBQUFtSSxLQUFBM0gsR0FBQVQsRUFBQUksRUFBQUYsRUFBQTJCLE9BQUF3RyxXQUFBaEksRUFBQWlJLEVBQUF6RyxPQUFBb0UsWUFBQS9GLEVBQUFVLEVBQUFKLEVBQUEsT0FBQUMsR0FBQVQsRUFBQUQsRUFBQWtGLEtBQUF4RSxFQUFBUCxFQUFBSCxFQUFBb0ksT0FBQTFILEVBQUE2SCxFQUFBdkksRUFBQTBGLFFBQUFoRixFQUFBRyxFQUFBYixFQUFBcUksS0FBQTlGLE9BQUFpRyxlQUFBeEksRUFBQSxjQUFBeUksT0FBQSxJQUFBekksRUFBQTBJLFdBQUF4SSxHQUFBLFNBQUFELEVBQUFELEdBQUEsUUFBQUUsR0FBQUQsR0FBQSxHQUFBRCxTQUFBQyxFQUFBLFNBQUFBLElBQUEsVUFBQUQsR0FBQSxZQUFBQSxHQUFBQyxFQUFBYSxRQUFBWixHQUFBLFNBQUFELEVBQUFELEVBQUFFLEdBQUEsWUFBQSxTQUFBQyxHQUFBRixHQUFBLE1BQUFBLElBQUFBLEVBQUFnSSxXQUFBaEksR0FBQWlJLFFBQUFqSSxHQUFBc0MsT0FBQWlHLGVBQUF4SSxFQUFBLGNBQUF5SSxPQUFBLEdBQUEsSUFBQWhJLEdBQUFQLEVBQUEsR0FBQUcsRUFBQUYsRUFBQU0sR0FBQUgsRUFBQUosRUFBQSxHQUFBUSxFQUFBUCxFQUFBRyxHQUFBeUgsRUFBQTdILEVBQUEsR0FBQUUsRUFBQSxXQUFBLEdBQUFILEdBQUEsSUFBQUQsR0FBQSxTQUFBLFNBQUEsUUFBQUUsR0FBQXlJLFlBQUF4SSxLQUFBTSxHQUFBLEVBQUFKLEVBQUEsU0FBQSxXQUFBSCxFQUFBeUksUUFBQUMsUUFBQSxTQUFBM0ksR0FBQUMsRUFBQUQsR0FBQTRJLFdBQUE1SSxFQUFBRCxHQUFBNEksUUFBQSxTQUFBM0ksR0FBQSxNQUFBcUYsa0JBQUFyRixFQUFBUSxLQUFBcUIsT0FBQWdILGtCQUFBLEdBQUFBLGtCQUFBckksR0FBQXNJLFFBQUFwRixTQUFBb0MsTUFBQWlELFlBQUEsRUFBQUMsV0FBQSxFQUFBQyxTQUFBLEdBQUEsSUFBQTVJLEdBQUEsU0FBQUwsR0FBQSxHQUFBLGdCQUFBQSxHQUFBLENBQUEsR0FBQUQsTUFBQW1KLE1BQUFwSSxLQUFBNEMsU0FBQXlGLGlCQUFBbkosR0FBQSxPQUFBQyxHQUFBeUksUUFBQVUsUUFBQXBKLElBQUEsRUFBQUMsRUFBQUQsR0FBQXFKLFNBQUF0SixHQUFBRSxFQUFBRCxJQUFBLEVBQUFTLEVBQUEsU0FBQVYsRUFBQUcsR0FBQUQsRUFBQXlJLFFBQUFZLEtBQUF0SixJQUFBQyxFQUFBRCxJQUFBLE9BQUFLLEdBQUF5QyxPQUFBLFNBQUE5QyxHQUFBLEdBQUEsU0FBQUEsRUFBQSxNQUFBRSxFQUFBLElBQUFILEdBQUEsU0FBQUMsR0FBQSxNQUFBLGdCQUFBQSxHQUFBLFFBQUEsTUFBQSxRQUFBLFNBQUEsUUFBQTJJLFFBQUE1SSxFQUFBQyxHQUFBLFNBQUFELEdBQUEsTUFBQUcsR0FBQUgsR0FBQUMsR0FBQSxTQUFBQyxHQUFBLE1BQUFGLEdBQUFDLEVBQUFDLElBQUFDLEVBQUFELEdBQUFELEVBQUFDLEdBQUEsT0FBQUMsR0FBQUcsRUFBQWtKLEdBQUEsU0FBQXZKLEdBQUEsT0FBQSxFQUFBOEgsRUFBQVcsWUFBQXpJLEVBQUFFLElBQUFHLEVBQUF5QyxPQUFBLEdBQUF6QyxFQUFBTixHQUFBLFFBQUFJLEtBQUEsU0FBQUgsRUFBQUQsRUFBQUUsR0FBQSxZQUFBLFNBQUFDLEdBQUFGLEVBQUFELEdBQUEsS0FBQUMsWUFBQUQsSUFBQSxLQUFBLElBQUF5SixXQUFBLHFDQUFBbEgsT0FBQWlHLGVBQUF4SSxFQUFBLGNBQUF5SSxPQUFBLEdBQUEsSUFBQWhJLEdBQUEsV0FBQSxRQUFBUixHQUFBQSxFQUFBRCxHQUFBLElBQUEsR0FBQUUsR0FBQSxFQUFBQSxFQUFBRixFQUFBZ0IsT0FBQWQsSUFBQSxDQUFBLEdBQUFDLEdBQUFILEVBQUFFLEVBQUFDLEdBQUF1SixXQUFBdkosRUFBQXVKLGFBQUEsRUFBQXZKLEVBQUF3SixjQUFBLEVBQUEsU0FBQXhKLEtBQUFBLEVBQUF5SixVQUFBLEdBQUFySCxPQUFBaUcsZUFBQXZJLEVBQUFFLEVBQUFnQyxJQUFBaEMsSUFBQSxNQUFBLFVBQUFILEVBQUFFLEVBQUFDLEdBQUEsTUFBQUQsSUFBQUQsRUFBQUQsRUFBQWlFLFVBQUEvRCxHQUFBQyxHQUFBRixFQUFBRCxFQUFBRyxHQUFBSCxNQUFBSyxFQUFBSCxFQUFBLEdBQUFJLEVBQUEsV0FBQSxRQUFBTCxHQUFBRCxFQUFBRSxHQUFBQyxFQUFBcUIsS0FBQXZCLEdBQUF1QixLQUFBdUIsT0FBQTdDLEVBQUFzQixLQUFBcUksV0FBQXJJLEtBQUE4SCxTQUFBdEosRUFBQXdCLEtBQUFzSSxVQUFBQyxTQUFBQyxTQUFBeEksS0FBQXlJLFNBQUFGLFNBQUFDLFNBQUEsTUFBQXZKLEdBQUFSLElBQUFrQyxJQUFBLFFBQUFzRyxNQUFBLFdBQUEsR0FBQXhJLEdBQUF1QixJQUFBLE9BQUFBLE1BQUE4SCxTQUFBVixRQUFBLFNBQUE1SSxHQUFBLEdBQUFFLElBQUEsRUFBQUcsRUFBQXFJLFlBQUExSSxFQUFBQyxFQUFBOEMsUUFBQTVDLEVBQUFGLEVBQUE0SixRQUFBUixRQUFBckosR0FBQVMsRUFBQU4sR0FBQSxFQUFBRyxFQUFBSixJQUFBTyxFQUFBQyxHQUFBUixHQUFBTyxDQUFBSCxLQUFBTCxFQUFBNEosUUFBQU4sS0FBQXZKLEdBQUFDLEVBQUFpSyxLQUFBLFFBQUFsSyxJQUFBVSxJQUFBVCxFQUFBNEosUUFBQU0sT0FBQWhLLEVBQUEsR0FBQUYsRUFBQWlLLEtBQUEsT0FBQWxLLE1BQUF3QixRQUFBVyxJQUFBLEtBQUFzRyxNQUFBLFNBQUF4SSxFQUFBRCxHQUFBLE1BQUF3QixNQUFBc0ksU0FBQTdKLEdBQUFzSixLQUFBdkosR0FBQXdCLFFBQUFXLElBQUEsT0FBQXNHLE1BQUEsU0FBQXhJLEVBQUFELEdBQUEsTUFBQXdCLE1BQUF5SSxRQUFBaEssR0FBQW1LLFFBQUFwSyxHQUFBd0IsUUFBQVcsSUFBQSxPQUFBc0csTUFBQSxTQUFBeEksRUFBQUQsR0FBQSxLQUFBd0IsS0FBQXlJLFFBQUFoSyxHQUFBZSxRQUFBUSxLQUFBeUksUUFBQWhLLEdBQUFvSyxNQUFBckssRUFBQSxLQUFBLEdBQUFFLEdBQUFzQixLQUFBc0ksU0FBQTdKLEdBQUFlLFNBQUFkLEdBQUEsR0FBQXNCLEtBQUFzSSxTQUFBN0osR0FBQUMsR0FBQUYsRUFBQSxPQUFBd0IsVUFBQXZCLElBQUFELEdBQUEsUUFBQSxTQUFBQyxFQUFBRCxHQUFBLE1BQUEsSUFBQU0sR0FBQUwsRUFBQUQsS0FBQSxTQUFBQyxFQUFBRCxJQUFBLFNBQUFBLEdBQUEsR0FBQUUsR0FBQSxnQkFBQUYsSUFBQUEsR0FBQUEsRUFBQXVDLFNBQUFBLFFBQUF2QyxDQUFBQyxHQUFBYSxRQUFBWixJQUFBYSxLQUFBZixFQUFBLFdBQUEsTUFBQXdCLFdBQUEsU0FBQXZCLEVBQUFELEVBQUFFLEdBQUEsR0FBQUMsR0FBQUQsRUFBQSxHQUFBTyxFQUFBLGdCQUFBNkosT0FBQUEsTUFBQUEsS0FBQS9ILFNBQUFBLFFBQUErSCxLQUFBakssRUFBQUYsR0FBQU0sR0FBQThKLFNBQUEsZ0JBQUF0SyxHQUFBYSxRQUFBVCxHQUFBLFNBQUFKLEVBQUFELEVBQUFFLEdBQUEsUUFBQUMsR0FBQUYsRUFBQUQsRUFBQUUsR0FBQSxRQUFBQyxHQUFBSCxHQUFBLEdBQUFFLEdBQUE0SCxFQUFBM0gsRUFBQXFLLENBQUEsT0FBQTFDLEdBQUEwQyxFQUFBLE9BQUFDLEVBQUF6SyxFQUFBMEssRUFBQXpLLEVBQUEwSyxNQUFBeEssRUFBQUQsR0FBQSxRQUFBSyxHQUFBTixHQUFBLE1BQUF3SyxHQUFBeEssRUFBQTJLLEVBQUFoRyxXQUFBaUcsRUFBQTdLLEdBQUE4SyxFQUFBM0ssRUFBQUYsR0FBQXlLLEVBQUEsUUFBQTdKLEdBQUFaLEdBQUEsR0FBQUMsR0FBQUQsRUFBQThLLEVBQUE1SyxFQUFBRixFQUFBd0ssRUFBQWhLLEVBQUFULEVBQUFFLENBQUEsT0FBQThLLEdBQUE1SyxFQUFBSyxFQUFBd0ssRUFBQTlLLEdBQUFNLEVBQUEsUUFBQXlLLEdBQUFqTCxHQUFBLEdBQUFDLEdBQUFELEVBQUE4SyxFQUFBNUssRUFBQUYsRUFBQXdLLENBQUEsT0FBQSxVQUFBTSxHQUFBN0ssR0FBQUYsR0FBQUUsRUFBQSxHQUFBOEssR0FBQTdLLEdBQUE4SyxFQUFBLFFBQUFKLEtBQUEsR0FBQTVLLEdBQUFJLEdBQUEsT0FBQTZLLEdBQUFqTCxHQUFBK0gsRUFBQS9ILFFBQUEySyxFQUFBaEcsV0FBQWlHLEVBQUFoSyxFQUFBWixLQUFBLFFBQUErSCxHQUFBL0gsR0FBQSxNQUFBMkssR0FBQSxPQUFBTyxHQUFBckQsRUFBQTNILEVBQUFGLElBQUE2SCxFQUFBMEMsRUFBQSxPQUFBRSxHQUFBLFFBQUFVLEtBQUEsU0FBQVIsR0FBQVMsYUFBQVQsR0FBQUgsRUFBQSxFQUFBM0MsRUFBQWlELEVBQUFQLEVBQUFJLEVBQUEsT0FBQSxRQUFBVSxLQUFBLE1BQUEsVUFBQVYsRUFBQUYsRUFBQTFDLEVBQUEzSCxLQUFBLFFBQUFrSSxLQUFBLEdBQUF0SSxHQUFBSSxJQUFBSCxFQUFBZ0wsRUFBQWpMLEVBQUEsSUFBQTZILEVBQUE1RixVQUFBc0ksRUFBQWhKLEtBQUF1SixFQUFBOUssRUFBQUMsRUFBQSxDQUFBLEdBQUEsU0FBQTBLLEVBQUEsTUFBQXJLLEdBQUF3SyxFQUFBLElBQUFDLEVBQUEsTUFBQUosR0FBQWhHLFdBQUFpRyxFQUFBN0ssR0FBQUcsRUFBQTRLLEdBQUEsTUFBQSxVQUFBSCxJQUFBQSxFQUFBaEcsV0FBQWlHLEVBQUE3SyxJQUFBMEssRUFBQSxHQUFBNUMsR0FBQTBDLEVBQUFTLEVBQUFQLEVBQUFFLEVBQUFHLEVBQUFOLEVBQUEsRUFBQUssR0FBQSxFQUFBRSxHQUFBLEVBQUFHLEdBQUEsQ0FBQSxJQUFBLGtCQUFBbEwsR0FBQSxLQUFBLElBQUF3SixXQUFBL0ksRUFBQSxPQUFBVixHQUFBTSxFQUFBTixJQUFBLEVBQUFTLEVBQUFQLEtBQUE0SyxJQUFBNUssRUFBQXFMLFFBQUFQLEVBQUEsV0FBQTlLLEdBQUErSyxFQUFBRCxFQUFBakQsRUFBQXpILEVBQUFKLEVBQUFzTCxVQUFBLEVBQUF4TCxHQUFBaUwsRUFBQUUsRUFBQSxZQUFBakwsS0FBQUEsRUFBQXVMLFNBQUFOLEdBQUE1QyxFQUFBbUQsT0FBQU4sRUFBQTdDLEVBQUFvRCxNQUFBTCxFQUFBL0MsRUFBQSxHQUFBOUgsR0FBQVAsRUFBQSxHQUFBRyxFQUFBSCxFQUFBLEdBQUFJLEVBQUFKLEVBQUEsSUFBQVEsRUFBQSxzQkFBQXFILEVBQUF6QixLQUFBQyxJQUFBbkcsRUFBQWtHLEtBQUFzRixHQUFBM0wsR0FBQWEsUUFBQVgsR0FBQSxTQUFBRixFQUFBRCxFQUFBRSxHQUFBLEdBQUFDLEdBQUFELEVBQUEsR0FBQU8sRUFBQSxXQUFBLE1BQUFOLEdBQUEwTCxLQUFBQyxNQUFBN0wsR0FBQWEsUUFBQUwsR0FBQSxTQUFBUixFQUFBRCxFQUFBRSxHQUFBLFFBQUFDLEdBQUFGLEVBQUFELEVBQUFFLEdBQUEsR0FBQUMsSUFBQSxFQUFBTyxHQUFBLENBQUEsSUFBQSxrQkFBQVQsR0FBQSxLQUFBLElBQUF3SixXQUFBbkosRUFBQSxPQUFBRCxHQUFBSCxLQUFBQyxFQUFBLFdBQUFELEtBQUFBLEVBQUFxTCxRQUFBcEwsRUFBQU8sRUFBQSxZQUFBUixLQUFBQSxFQUFBdUwsU0FBQS9LLEdBQUFELEVBQUFSLEVBQUFELEdBQUF1TCxRQUFBcEwsRUFBQXFMLFFBQUF4TCxFQUFBeUwsU0FBQS9LLElBQUEsR0FBQUQsR0FBQVAsRUFBQSxHQUFBRyxFQUFBSCxFQUFBLEdBQUFJLEVBQUEscUJBQUFMLEdBQUFhLFFBQUFYLEdBQUEsU0FBQUYsRUFBQUQsR0FBQSxRQUFBRSxHQUFBRCxHQUFBLE1BQUFBLEdBQUFBLEVBQUFhLFFBQUFaLCtGQ0xBLEdBQUE2TCxHQUFBdkwsRUFBQSxvQ0FFQSxJQUFBd0wsR0FBQTlELHNnQkNGQStELEVBQUF6TCxFQUFBLDRCQUNBMEwsRUFBQTFMLEVBQUEsOEJBQ0EyTCxFQUFBM0wsRUFBQSxrQkFFcUI0TCxhQUNwQixRQUFBQSxLQUFjQyxFQUFBN0ssS0FBQTRLLEdBQ2I1SyxLQUFLK0MsT0FDTC9DLEtBQUs4SyxrREFHQyxHQUFBQyxHQUFBL0ssTUFFTixFQUFBZ0wsRUFBQXRFLFNBQU8sa0JBQ0x1RSxHQUFHLFFBQVMsU0FBQUMsR0FBQSxNQUFNSCxHQUFLSSxVQUFVRCxzQ0FJbkMsR0FBQUUsR0FBQTFFLFFBQWlCLFdBQWpCMkUsRUFBQTNFLDJDQUdTNEUsR0FDVCxHQUFJQyxHQUFPRCxFQUFPRSxhQUFhLGVBQy9CRixHQUFPRyxNQUFNQyxnQkFBa0IsT0FBU0gsRUFBTyx1QkFsQjVCWCwyaEJDSnJCZSxFQUFBM00sRUFBQSx1Q0FDQTJMLEVBQUEzTCxFQUFBLGtCQUVxQjRNLGFBQ3BCLFFBQUFBLEtBQWNmLEVBQUE3SyxLQUFBNEwsR0FDYjVMLEtBQUs2TCx3QkFDTDdMLEtBQUs4TCxnRUFHUyxHQUFBZixHQUFBL0ssS0FFUitMLEdBRGdCNUosU0FBU3lGLGlCQUFpQixvQkFDbkN6RixTQUFTNkosY0FBYyxtQ0FDOUJDLEVBQVEsR0FBQWpCLEdBQUF0RSxRQUFXLG1CQUN6QndGLFNBQVFDLElBQUlGLEdBQ1pBLEVBQ0NoQixHQUFHLFFBQVMsU0FBQ0MsRUFBSWpNLEdBQ2pCLEdBQU1tTixHQUFNbEIsRUFBR00sYUFBYSxXQUN4QmxMLFFBQU93RyxXQUFhLElBQ3ZCaUUsRUFBS3NCLFVBQVVELEVBQUtMLEdBRXBCYixFQUFHa0IsSUFBTUEsc0NBS0ZBLEVBQUtMLEdBQ2RBLEVBQUtOLE1BQU1DLGdCQUFYLE9BQW9DVSxFQUFwQyxvREFJQSxHQUFNRSxHQUFTbkssU0FBUzZKLGNBQWMsdUJBQ2hDTyxFQUFTcEssU0FBUzZKLGNBQWMsMEJBQ2hDUSxHQUNMbkwsV0FDQ0wsS0FBTyxHQUNQQyxHQUFLLElBR0h3TCxFQUFlLEdBQUFDLEdBQUFoRyxRQUFhNEYsRUFBUUUsR0FDcENHLEVBQWUsR0FBQUQsR0FBQWhHLFFBQWE2RixFQUFRQyxFQUN4Q0MsR0FBYTFKLE9BQ2I0SixFQUFhNUosMEJBdENNNkksMmRDSEFnQixhQUNwQixRQUFBQSxHQUFZQyxFQUFPbk4sR0FBUW1MLEVBQUE3SyxLQUFBNE0sR0FDdEI1TSxLQUFLOE0sVUFBVUQsSUFDbEI3TSxLQUFLK00sV0FBV3JOLCtDQUlSbU4sR0FDVCxHQUFJRyxJQUFVLEVBQ1ZDLEVBQU8zTSxPQUFPNE0sU0FBU0MsU0FBU0MsTUFBTSxJQVkxQyxPQVRDSCxHQURHQSxFQUFLek4sT0FBUyxFQUNWLElBRUF5TixFQUFLLEdBR1RBLElBQVNKLElBQ1pHLEdBQVUsR0FHSkEscUNBR0d0TixHQUNWLEdBQUlBLHNCQXpCZWtOIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qIVxuICogaGVhZHJvb20uanMgdjAuOS4zIC0gR2l2ZSB5b3VyIHBhZ2Ugc29tZSBoZWFkcm9vbS4gSGlkZSB5b3VyIGhlYWRlciB1bnRpbCB5b3UgbmVlZCBpdFxuICogQ29weXJpZ2h0IChjKSAyMDE2IE5pY2sgV2lsbGlhbXMgLSBodHRwOi8vd2lja3kubmlsbGlhLm1zL2hlYWRyb29tLmpzXG4gKiBMaWNlbnNlOiBNSVRcbiAqL1xuXG4oZnVuY3Rpb24ocm9vdCwgZmFjdG9yeSkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIC8vIEFNRC4gUmVnaXN0ZXIgYXMgYW4gYW5vbnltb3VzIG1vZHVsZS5cbiAgICBkZWZpbmUoW10sIGZhY3RvcnkpO1xuICB9XG4gIGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIC8vIENPTU1PTkpTXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH1cbiAgZWxzZSB7XG4gICAgLy8gQlJPV1NFUlxuICAgIHJvb3QuSGVhZHJvb20gPSBmYWN0b3J5KCk7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvKiBleHBvcnRlZCBmZWF0dXJlcyAqL1xuICBcbiAgdmFyIGZlYXR1cmVzID0ge1xuICAgIGJpbmQgOiAhIShmdW5jdGlvbigpe30uYmluZCksXG4gICAgY2xhc3NMaXN0IDogJ2NsYXNzTGlzdCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LFxuICAgIHJBRiA6ICEhKHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHwgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lKVxuICB9O1xuICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8IHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XG4gIFxuICAvKipcbiAgICogSGFuZGxlcyBkZWJvdW5jaW5nIG9mIGV2ZW50cyB2aWEgcmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gICAqIEBzZWUgaHR0cDovL3d3dy5odG1sNXJvY2tzLmNvbS9lbi90dXRvcmlhbHMvc3BlZWQvYW5pbWF0aW9ucy9cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2sgVGhlIGNhbGxiYWNrIHRvIGhhbmRsZSB3aGljaGV2ZXIgZXZlbnRcbiAgICovXG4gIGZ1bmN0aW9uIERlYm91bmNlciAoY2FsbGJhY2spIHtcbiAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgdGhpcy50aWNraW5nID0gZmFsc2U7XG4gIH1cbiAgRGVib3VuY2VyLnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvciA6IERlYm91bmNlcixcbiAgXG4gICAgLyoqXG4gICAgICogZGlzcGF0Y2hlcyB0aGUgZXZlbnQgdG8gdGhlIHN1cHBsaWVkIGNhbGxiYWNrXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICB1cGRhdGUgOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuY2FsbGJhY2sgJiYgdGhpcy5jYWxsYmFjaygpO1xuICAgICAgdGhpcy50aWNraW5nID0gZmFsc2U7XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogZW5zdXJlcyBldmVudHMgZG9uJ3QgZ2V0IHN0YWNrZWRcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIHJlcXVlc3RUaWNrIDogZnVuY3Rpb24oKSB7XG4gICAgICBpZighdGhpcy50aWNraW5nKSB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnJhZkNhbGxiYWNrIHx8ICh0aGlzLnJhZkNhbGxiYWNrID0gdGhpcy51cGRhdGUuYmluZCh0aGlzKSkpO1xuICAgICAgICB0aGlzLnRpY2tpbmcgPSB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIEF0dGFjaCB0aGlzIGFzIHRoZSBldmVudCBsaXN0ZW5lcnNcbiAgICAgKi9cbiAgICBoYW5kbGVFdmVudCA6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5yZXF1ZXN0VGljaygpO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIENoZWNrIGlmIG9iamVjdCBpcyBwYXJ0IG9mIHRoZSBET01cbiAgICogQGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmogZWxlbWVudCB0byBjaGVja1xuICAgKi9cbiAgZnVuY3Rpb24gaXNET01FbGVtZW50KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgKG9iaiA9PT0gd2luZG93IHx8IG9iai5ub2RlVHlwZSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBIZWxwZXIgZnVuY3Rpb24gZm9yIGV4dGVuZGluZyBvYmplY3RzXG4gICAqL1xuICBmdW5jdGlvbiBleHRlbmQgKG9iamVjdCAvKiwgb2JqZWN0TiAuLi4gKi8pIHtcbiAgICBpZihhcmd1bWVudHMubGVuZ3RoIDw9IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBhcmd1bWVudHMgaW4gZXh0ZW5kIGZ1bmN0aW9uJyk7XG4gICAgfVxuICBcbiAgICB2YXIgcmVzdWx0ID0gb2JqZWN0IHx8IHt9LFxuICAgICAgICBrZXksXG4gICAgICAgIGk7XG4gIFxuICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciByZXBsYWNlbWVudCA9IGFyZ3VtZW50c1tpXSB8fCB7fTtcbiAgXG4gICAgICBmb3IgKGtleSBpbiByZXBsYWNlbWVudCkge1xuICAgICAgICAvLyBSZWN1cnNlIGludG8gb2JqZWN0IGV4Y2VwdCBpZiB0aGUgb2JqZWN0IGlzIGEgRE9NIGVsZW1lbnRcbiAgICAgICAgaWYodHlwZW9mIHJlc3VsdFtrZXldID09PSAnb2JqZWN0JyAmJiAhIGlzRE9NRWxlbWVudChyZXN1bHRba2V5XSkpIHtcbiAgICAgICAgICByZXN1bHRba2V5XSA9IGV4dGVuZChyZXN1bHRba2V5XSwgcmVwbGFjZW1lbnRba2V5XSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSByZXN1bHRba2V5XSB8fCByZXBsYWNlbWVudFtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICBcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIFxuICAvKipcbiAgICogSGVscGVyIGZ1bmN0aW9uIGZvciBub3JtYWxpemluZyB0b2xlcmFuY2Ugb3B0aW9uIHRvIG9iamVjdCBmb3JtYXRcbiAgICovXG4gIGZ1bmN0aW9uIG5vcm1hbGl6ZVRvbGVyYW5jZSAodCkge1xuICAgIHJldHVybiB0ID09PSBPYmplY3QodCkgPyB0IDogeyBkb3duIDogdCwgdXAgOiB0IH07XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBVSSBlbmhhbmNlbWVudCBmb3IgZml4ZWQgaGVhZGVycy5cbiAgICogSGlkZXMgaGVhZGVyIHdoZW4gc2Nyb2xsaW5nIGRvd25cbiAgICogU2hvd3MgaGVhZGVyIHdoZW4gc2Nyb2xsaW5nIHVwXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0ge0RPTUVsZW1lbnR9IGVsZW0gdGhlIGhlYWRlciBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zIG9wdGlvbnMgZm9yIHRoZSB3aWRnZXRcbiAgICovXG4gIGZ1bmN0aW9uIEhlYWRyb29tIChlbGVtLCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IGV4dGVuZChvcHRpb25zLCBIZWFkcm9vbS5vcHRpb25zKTtcbiAgXG4gICAgdGhpcy5sYXN0S25vd25TY3JvbGxZID0gMDtcbiAgICB0aGlzLmVsZW0gICAgICAgICAgICAgPSBlbGVtO1xuICAgIHRoaXMudG9sZXJhbmNlICAgICAgICA9IG5vcm1hbGl6ZVRvbGVyYW5jZShvcHRpb25zLnRvbGVyYW5jZSk7XG4gICAgdGhpcy5jbGFzc2VzICAgICAgICAgID0gb3B0aW9ucy5jbGFzc2VzO1xuICAgIHRoaXMub2Zmc2V0ICAgICAgICAgICA9IG9wdGlvbnMub2Zmc2V0O1xuICAgIHRoaXMuc2Nyb2xsZXIgICAgICAgICA9IG9wdGlvbnMuc2Nyb2xsZXI7XG4gICAgdGhpcy5pbml0aWFsaXNlZCAgICAgID0gZmFsc2U7XG4gICAgdGhpcy5vblBpbiAgICAgICAgICAgID0gb3B0aW9ucy5vblBpbjtcbiAgICB0aGlzLm9uVW5waW4gICAgICAgICAgPSBvcHRpb25zLm9uVW5waW47XG4gICAgdGhpcy5vblRvcCAgICAgICAgICAgID0gb3B0aW9ucy5vblRvcDtcbiAgICB0aGlzLm9uTm90VG9wICAgICAgICAgPSBvcHRpb25zLm9uTm90VG9wO1xuICAgIHRoaXMub25Cb3R0b20gICAgICAgICA9IG9wdGlvbnMub25Cb3R0b207XG4gICAgdGhpcy5vbk5vdEJvdHRvbSAgICAgID0gb3B0aW9ucy5vbk5vdEJvdHRvbTtcbiAgfVxuICBIZWFkcm9vbS5wcm90b3R5cGUgPSB7XG4gICAgY29uc3RydWN0b3IgOiBIZWFkcm9vbSxcbiAgXG4gICAgLyoqXG4gICAgICogSW5pdGlhbGlzZXMgdGhlIHdpZGdldFxuICAgICAqL1xuICAgIGluaXQgOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmKCFIZWFkcm9vbS5jdXRzVGhlTXVzdGFyZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gIFxuICAgICAgdGhpcy5kZWJvdW5jZXIgPSBuZXcgRGVib3VuY2VyKHRoaXMudXBkYXRlLmJpbmQodGhpcykpO1xuICAgICAgdGhpcy5lbGVtLmNsYXNzTGlzdC5hZGQodGhpcy5jbGFzc2VzLmluaXRpYWwpO1xuICBcbiAgICAgIC8vIGRlZmVyIGV2ZW50IHJlZ2lzdHJhdGlvbiB0byBoYW5kbGUgYnJvd3NlciBcbiAgICAgIC8vIHBvdGVudGlhbGx5IHJlc3RvcmluZyBwcmV2aW91cyBzY3JvbGwgcG9zaXRpb25cbiAgICAgIHNldFRpbWVvdXQodGhpcy5hdHRhY2hFdmVudC5iaW5kKHRoaXMpLCAxMDApO1xuICBcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIFVuYXR0YWNoZXMgZXZlbnRzIGFuZCByZW1vdmVzIGFueSBjbGFzc2VzIHRoYXQgd2VyZSBhZGRlZFxuICAgICAqL1xuICAgIGRlc3Ryb3kgOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjbGFzc2VzID0gdGhpcy5jbGFzc2VzO1xuICBcbiAgICAgIHRoaXMuaW5pdGlhbGlzZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuZWxlbS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzZXMudW5waW5uZWQsIGNsYXNzZXMucGlubmVkLCBjbGFzc2VzLnRvcCwgY2xhc3Nlcy5ub3RUb3AsIGNsYXNzZXMuaW5pdGlhbCk7XG4gICAgICB0aGlzLnNjcm9sbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuZGVib3VuY2VyLCBmYWxzZSk7XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogQXR0YWNoZXMgdGhlIHNjcm9sbCBldmVudFxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgYXR0YWNoRXZlbnQgOiBmdW5jdGlvbigpIHtcbiAgICAgIGlmKCF0aGlzLmluaXRpYWxpc2VkKXtcbiAgICAgICAgdGhpcy5sYXN0S25vd25TY3JvbGxZID0gdGhpcy5nZXRTY3JvbGxZKCk7XG4gICAgICAgIHRoaXMuaW5pdGlhbGlzZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLnNjcm9sbGVyLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuZGVib3VuY2VyLCBmYWxzZSk7XG4gIFxuICAgICAgICB0aGlzLmRlYm91bmNlci5oYW5kbGVFdmVudCgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogVW5waW5zIHRoZSBoZWFkZXIgaWYgaXQncyBjdXJyZW50bHkgcGlubmVkXG4gICAgICovXG4gICAgdW5waW4gOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjbGFzc0xpc3QgPSB0aGlzLmVsZW0uY2xhc3NMaXN0LFxuICAgICAgICBjbGFzc2VzID0gdGhpcy5jbGFzc2VzO1xuICAgICAgXG4gICAgICBpZihjbGFzc0xpc3QuY29udGFpbnMoY2xhc3Nlcy5waW5uZWQpIHx8ICFjbGFzc0xpc3QuY29udGFpbnMoY2xhc3Nlcy51bnBpbm5lZCkpIHtcbiAgICAgICAgY2xhc3NMaXN0LmFkZChjbGFzc2VzLnVucGlubmVkKTtcbiAgICAgICAgY2xhc3NMaXN0LnJlbW92ZShjbGFzc2VzLnBpbm5lZCk7XG4gICAgICAgIHRoaXMub25VbnBpbiAmJiB0aGlzLm9uVW5waW4uY2FsbCh0aGlzKTtcbiAgICAgIH1cbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiBQaW5zIHRoZSBoZWFkZXIgaWYgaXQncyBjdXJyZW50bHkgdW5waW5uZWRcbiAgICAgKi9cbiAgICBwaW4gOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjbGFzc0xpc3QgPSB0aGlzLmVsZW0uY2xhc3NMaXN0LFxuICAgICAgICBjbGFzc2VzID0gdGhpcy5jbGFzc2VzO1xuICAgICAgXG4gICAgICBpZihjbGFzc0xpc3QuY29udGFpbnMoY2xhc3Nlcy51bnBpbm5lZCkpIHtcbiAgICAgICAgY2xhc3NMaXN0LnJlbW92ZShjbGFzc2VzLnVucGlubmVkKTtcbiAgICAgICAgY2xhc3NMaXN0LmFkZChjbGFzc2VzLnBpbm5lZCk7XG4gICAgICAgIHRoaXMub25QaW4gJiYgdGhpcy5vblBpbi5jYWxsKHRoaXMpO1xuICAgICAgfVxuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIEhhbmRsZXMgdGhlIHRvcCBzdGF0ZXNcbiAgICAgKi9cbiAgICB0b3AgOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjbGFzc0xpc3QgPSB0aGlzLmVsZW0uY2xhc3NMaXN0LFxuICAgICAgICBjbGFzc2VzID0gdGhpcy5jbGFzc2VzO1xuICAgICAgXG4gICAgICBpZighY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzZXMudG9wKSkge1xuICAgICAgICBjbGFzc0xpc3QuYWRkKGNsYXNzZXMudG9wKTtcbiAgICAgICAgY2xhc3NMaXN0LnJlbW92ZShjbGFzc2VzLm5vdFRvcCk7XG4gICAgICAgIHRoaXMub25Ub3AgJiYgdGhpcy5vblRvcC5jYWxsKHRoaXMpO1xuICAgICAgfVxuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIEhhbmRsZXMgdGhlIG5vdCB0b3Agc3RhdGVcbiAgICAgKi9cbiAgICBub3RUb3AgOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjbGFzc0xpc3QgPSB0aGlzLmVsZW0uY2xhc3NMaXN0LFxuICAgICAgICBjbGFzc2VzID0gdGhpcy5jbGFzc2VzO1xuICAgICAgXG4gICAgICBpZighY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzZXMubm90VG9wKSkge1xuICAgICAgICBjbGFzc0xpc3QuYWRkKGNsYXNzZXMubm90VG9wKTtcbiAgICAgICAgY2xhc3NMaXN0LnJlbW92ZShjbGFzc2VzLnRvcCk7XG4gICAgICAgIHRoaXMub25Ob3RUb3AgJiYgdGhpcy5vbk5vdFRvcC5jYWxsKHRoaXMpO1xuICAgICAgfVxuICAgIH0sXG4gIFxuICAgIGJvdHRvbSA6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNsYXNzTGlzdCA9IHRoaXMuZWxlbS5jbGFzc0xpc3QsXG4gICAgICAgIGNsYXNzZXMgPSB0aGlzLmNsYXNzZXM7XG4gICAgICBcbiAgICAgIGlmKCFjbGFzc0xpc3QuY29udGFpbnMoY2xhc3Nlcy5ib3R0b20pKSB7XG4gICAgICAgIGNsYXNzTGlzdC5hZGQoY2xhc3Nlcy5ib3R0b20pO1xuICAgICAgICBjbGFzc0xpc3QucmVtb3ZlKGNsYXNzZXMubm90Qm90dG9tKTtcbiAgICAgICAgdGhpcy5vbkJvdHRvbSAmJiB0aGlzLm9uQm90dG9tLmNhbGwodGhpcyk7XG4gICAgICB9XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogSGFuZGxlcyB0aGUgbm90IHRvcCBzdGF0ZVxuICAgICAqL1xuICAgIG5vdEJvdHRvbSA6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNsYXNzTGlzdCA9IHRoaXMuZWxlbS5jbGFzc0xpc3QsXG4gICAgICAgIGNsYXNzZXMgPSB0aGlzLmNsYXNzZXM7XG4gICAgICBcbiAgICAgIGlmKCFjbGFzc0xpc3QuY29udGFpbnMoY2xhc3Nlcy5ub3RCb3R0b20pKSB7XG4gICAgICAgIGNsYXNzTGlzdC5hZGQoY2xhc3Nlcy5ub3RCb3R0b20pO1xuICAgICAgICBjbGFzc0xpc3QucmVtb3ZlKGNsYXNzZXMuYm90dG9tKTtcbiAgICAgICAgdGhpcy5vbk5vdEJvdHRvbSAmJiB0aGlzLm9uTm90Qm90dG9tLmNhbGwodGhpcyk7XG4gICAgICB9XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgWSBzY3JvbGwgcG9zaXRpb25cbiAgICAgKiBAc2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3cuc2Nyb2xsWVxuICAgICAqIEByZXR1cm4ge051bWJlcn0gcGl4ZWxzIHRoZSBwYWdlIGhhcyBzY3JvbGxlZCBhbG9uZyB0aGUgWS1heGlzXG4gICAgICovXG4gICAgZ2V0U2Nyb2xsWSA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICh0aGlzLnNjcm9sbGVyLnBhZ2VZT2Zmc2V0ICE9PSB1bmRlZmluZWQpXG4gICAgICAgID8gdGhpcy5zY3JvbGxlci5wYWdlWU9mZnNldFxuICAgICAgICA6ICh0aGlzLnNjcm9sbGVyLnNjcm9sbFRvcCAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgID8gdGhpcy5zY3JvbGxlci5zY3JvbGxUb3BcbiAgICAgICAgICA6IChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQgfHwgZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlIHx8IGRvY3VtZW50LmJvZHkpLnNjcm9sbFRvcDtcbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0XG4gICAgICogQHNlZSBodHRwOi8vYW5keWxhbmd0b24uY28udWsvYmxvZy9kZXZlbG9wbWVudC9nZXQtdmlld3BvcnQtc2l6ZS13aWR0aC1hbmQtaGVpZ2h0LWphdmFzY3JpcHRcbiAgICAgKiBAcmV0dXJuIHtpbnR9IHRoZSBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0IGluIHBpeGVsc1xuICAgICAqL1xuICAgIGdldFZpZXdwb3J0SGVpZ2h0IDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0XG4gICAgICAgIHx8IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0O1xuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHBoeXNpY2FsIGhlaWdodCBvZiB0aGUgRE9NIGVsZW1lbnRcbiAgICAgKiBAcGFyYW0gIHtPYmplY3R9ICBlbG0gdGhlIGVsZW1lbnQgdG8gY2FsY3VsYXRlIHRoZSBwaHlzaWNhbCBoZWlnaHQgb2Ygd2hpY2hcbiAgICAgKiBAcmV0dXJuIHtpbnR9ICAgICB0aGUgcGh5c2ljYWwgaGVpZ2h0IG9mIHRoZSBlbGVtZW50IGluIHBpeGVsc1xuICAgICAqL1xuICAgIGdldEVsZW1lbnRQaHlzaWNhbEhlaWdodCA6IGZ1bmN0aW9uIChlbG0pIHtcbiAgICAgIHJldHVybiBNYXRoLm1heChcbiAgICAgICAgZWxtLm9mZnNldEhlaWdodCxcbiAgICAgICAgZWxtLmNsaWVudEhlaWdodFxuICAgICAgKTtcbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBwaHlzaWNhbCBoZWlnaHQgb2YgdGhlIHNjcm9sbGVyIGVsZW1lbnRcbiAgICAgKiBAcmV0dXJuIHtpbnR9IHRoZSBwaHlzaWNhbCBoZWlnaHQgb2YgdGhlIHNjcm9sbGVyIGVsZW1lbnQgaW4gcGl4ZWxzXG4gICAgICovXG4gICAgZ2V0U2Nyb2xsZXJQaHlzaWNhbEhlaWdodCA6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAodGhpcy5zY3JvbGxlciA9PT0gd2luZG93IHx8IHRoaXMuc2Nyb2xsZXIgPT09IGRvY3VtZW50LmJvZHkpXG4gICAgICAgID8gdGhpcy5nZXRWaWV3cG9ydEhlaWdodCgpXG4gICAgICAgIDogdGhpcy5nZXRFbGVtZW50UGh5c2ljYWxIZWlnaHQodGhpcy5zY3JvbGxlcik7XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSBkb2N1bWVudFxuICAgICAqIEBzZWUgaHR0cDovL2phbWVzLnBhZG9sc2V5LmNvbS9qYXZhc2NyaXB0L2dldC1kb2N1bWVudC1oZWlnaHQtY3Jvc3MtYnJvd3Nlci9cbiAgICAgKiBAcmV0dXJuIHtpbnR9IHRoZSBoZWlnaHQgb2YgdGhlIGRvY3VtZW50IGluIHBpeGVsc1xuICAgICAqL1xuICAgIGdldERvY3VtZW50SGVpZ2h0IDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGJvZHkgPSBkb2N1bWVudC5ib2R5LFxuICAgICAgICBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gICAgXG4gICAgICByZXR1cm4gTWF0aC5tYXgoXG4gICAgICAgIGJvZHkuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LFxuICAgICAgICBib2R5Lm9mZnNldEhlaWdodCwgZG9jdW1lbnRFbGVtZW50Lm9mZnNldEhlaWdodCxcbiAgICAgICAgYm9keS5jbGllbnRIZWlnaHQsIGRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHRcbiAgICAgICk7XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgaGVpZ2h0IG9mIHRoZSBET00gZWxlbWVudFxuICAgICAqIEBwYXJhbSAge09iamVjdH0gIGVsbSB0aGUgZWxlbWVudCB0byBjYWxjdWxhdGUgdGhlIGhlaWdodCBvZiB3aGljaFxuICAgICAqIEByZXR1cm4ge2ludH0gICAgIHRoZSBoZWlnaHQgb2YgdGhlIGVsZW1lbnQgaW4gcGl4ZWxzXG4gICAgICovXG4gICAgZ2V0RWxlbWVudEhlaWdodCA6IGZ1bmN0aW9uIChlbG0pIHtcbiAgICAgIHJldHVybiBNYXRoLm1heChcbiAgICAgICAgZWxtLnNjcm9sbEhlaWdodCxcbiAgICAgICAgZWxtLm9mZnNldEhlaWdodCxcbiAgICAgICAgZWxtLmNsaWVudEhlaWdodFxuICAgICAgKTtcbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBoZWlnaHQgb2YgdGhlIHNjcm9sbGVyIGVsZW1lbnRcbiAgICAgKiBAcmV0dXJuIHtpbnR9IHRoZSBoZWlnaHQgb2YgdGhlIHNjcm9sbGVyIGVsZW1lbnQgaW4gcGl4ZWxzXG4gICAgICovXG4gICAgZ2V0U2Nyb2xsZXJIZWlnaHQgOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gKHRoaXMuc2Nyb2xsZXIgPT09IHdpbmRvdyB8fCB0aGlzLnNjcm9sbGVyID09PSBkb2N1bWVudC5ib2R5KVxuICAgICAgICA/IHRoaXMuZ2V0RG9jdW1lbnRIZWlnaHQoKVxuICAgICAgICA6IHRoaXMuZ2V0RWxlbWVudEhlaWdodCh0aGlzLnNjcm9sbGVyKTtcbiAgICB9LFxuICBcbiAgICAvKipcbiAgICAgKiBkZXRlcm1pbmVzIGlmIHRoZSBzY3JvbGwgcG9zaXRpb24gaXMgb3V0c2lkZSBvZiBkb2N1bWVudCBib3VuZGFyaWVzXG4gICAgICogQHBhcmFtICB7aW50fSAgY3VycmVudFNjcm9sbFkgdGhlIGN1cnJlbnQgeSBzY3JvbGwgcG9zaXRpb25cbiAgICAgKiBAcmV0dXJuIHtib29sfSB0cnVlIGlmIG91dCBvZiBib3VuZHMsIGZhbHNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlzT3V0T2ZCb3VuZHMgOiBmdW5jdGlvbiAoY3VycmVudFNjcm9sbFkpIHtcbiAgICAgIHZhciBwYXN0VG9wICA9IGN1cnJlbnRTY3JvbGxZIDwgMCxcbiAgICAgICAgcGFzdEJvdHRvbSA9IGN1cnJlbnRTY3JvbGxZICsgdGhpcy5nZXRTY3JvbGxlclBoeXNpY2FsSGVpZ2h0KCkgPiB0aGlzLmdldFNjcm9sbGVySGVpZ2h0KCk7XG4gICAgICBcbiAgICAgIHJldHVybiBwYXN0VG9wIHx8IHBhc3RCb3R0b207XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogZGV0ZXJtaW5lcyBpZiB0aGUgdG9sZXJhbmNlIGhhcyBiZWVuIGV4Y2VlZGVkXG4gICAgICogQHBhcmFtICB7aW50fSBjdXJyZW50U2Nyb2xsWSB0aGUgY3VycmVudCBzY3JvbGwgeSBwb3NpdGlvblxuICAgICAqIEByZXR1cm4ge2Jvb2x9IHRydWUgaWYgdG9sZXJhbmNlIGV4Y2VlZGVkLCBmYWxzZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICB0b2xlcmFuY2VFeGNlZWRlZCA6IGZ1bmN0aW9uIChjdXJyZW50U2Nyb2xsWSwgZGlyZWN0aW9uKSB7XG4gICAgICByZXR1cm4gTWF0aC5hYnMoY3VycmVudFNjcm9sbFktdGhpcy5sYXN0S25vd25TY3JvbGxZKSA+PSB0aGlzLnRvbGVyYW5jZVtkaXJlY3Rpb25dO1xuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIGRldGVybWluZSBpZiBpdCBpcyBhcHByb3ByaWF0ZSB0byB1bnBpblxuICAgICAqIEBwYXJhbSAge2ludH0gY3VycmVudFNjcm9sbFkgdGhlIGN1cnJlbnQgeSBzY3JvbGwgcG9zaXRpb25cbiAgICAgKiBAcGFyYW0gIHtib29sfSB0b2xlcmFuY2VFeGNlZWRlZCBoYXMgdGhlIHRvbGVyYW5jZSBiZWVuIGV4Y2VlZGVkP1xuICAgICAqIEByZXR1cm4ge2Jvb2x9IHRydWUgaWYgc2hvdWxkIHVucGluLCBmYWxzZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICBzaG91bGRVbnBpbiA6IGZ1bmN0aW9uIChjdXJyZW50U2Nyb2xsWSwgdG9sZXJhbmNlRXhjZWVkZWQpIHtcbiAgICAgIHZhciBzY3JvbGxpbmdEb3duID0gY3VycmVudFNjcm9sbFkgPiB0aGlzLmxhc3RLbm93blNjcm9sbFksXG4gICAgICAgIHBhc3RPZmZzZXQgPSBjdXJyZW50U2Nyb2xsWSA+PSB0aGlzLm9mZnNldDtcbiAgXG4gICAgICByZXR1cm4gc2Nyb2xsaW5nRG93biAmJiBwYXN0T2Zmc2V0ICYmIHRvbGVyYW5jZUV4Y2VlZGVkO1xuICAgIH0sXG4gIFxuICAgIC8qKlxuICAgICAqIGRldGVybWluZSBpZiBpdCBpcyBhcHByb3ByaWF0ZSB0byBwaW5cbiAgICAgKiBAcGFyYW0gIHtpbnR9IGN1cnJlbnRTY3JvbGxZIHRoZSBjdXJyZW50IHkgc2Nyb2xsIHBvc2l0aW9uXG4gICAgICogQHBhcmFtICB7Ym9vbH0gdG9sZXJhbmNlRXhjZWVkZWQgaGFzIHRoZSB0b2xlcmFuY2UgYmVlbiBleGNlZWRlZD9cbiAgICAgKiBAcmV0dXJuIHtib29sfSB0cnVlIGlmIHNob3VsZCBwaW4sIGZhbHNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIHNob3VsZFBpbiA6IGZ1bmN0aW9uIChjdXJyZW50U2Nyb2xsWSwgdG9sZXJhbmNlRXhjZWVkZWQpIHtcbiAgICAgIHZhciBzY3JvbGxpbmdVcCAgPSBjdXJyZW50U2Nyb2xsWSA8IHRoaXMubGFzdEtub3duU2Nyb2xsWSxcbiAgICAgICAgcGFzdE9mZnNldCA9IGN1cnJlbnRTY3JvbGxZIDw9IHRoaXMub2Zmc2V0O1xuICBcbiAgICAgIHJldHVybiAoc2Nyb2xsaW5nVXAgJiYgdG9sZXJhbmNlRXhjZWVkZWQpIHx8IHBhc3RPZmZzZXQ7XG4gICAgfSxcbiAgXG4gICAgLyoqXG4gICAgICogSGFuZGxlcyB1cGRhdGluZyB0aGUgc3RhdGUgb2YgdGhlIHdpZGdldFxuICAgICAqL1xuICAgIHVwZGF0ZSA6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGN1cnJlbnRTY3JvbGxZICA9IHRoaXMuZ2V0U2Nyb2xsWSgpLFxuICAgICAgICBzY3JvbGxEaXJlY3Rpb24gPSBjdXJyZW50U2Nyb2xsWSA+IHRoaXMubGFzdEtub3duU2Nyb2xsWSA/ICdkb3duJyA6ICd1cCcsXG4gICAgICAgIHRvbGVyYW5jZUV4Y2VlZGVkID0gdGhpcy50b2xlcmFuY2VFeGNlZWRlZChjdXJyZW50U2Nyb2xsWSwgc2Nyb2xsRGlyZWN0aW9uKTtcbiAgXG4gICAgICBpZih0aGlzLmlzT3V0T2ZCb3VuZHMoY3VycmVudFNjcm9sbFkpKSB7IC8vIElnbm9yZSBib3VuY3kgc2Nyb2xsaW5nIGluIE9TWFxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gIFxuICAgICAgaWYgKGN1cnJlbnRTY3JvbGxZIDw9IHRoaXMub2Zmc2V0ICkge1xuICAgICAgICB0aGlzLnRvcCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5ub3RUb3AoKTtcbiAgICAgIH1cbiAgXG4gICAgICBpZihjdXJyZW50U2Nyb2xsWSArIHRoaXMuZ2V0Vmlld3BvcnRIZWlnaHQoKSA+PSB0aGlzLmdldFNjcm9sbGVySGVpZ2h0KCkpIHtcbiAgICAgICAgdGhpcy5ib3R0b20oKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLm5vdEJvdHRvbSgpO1xuICAgICAgfVxuICBcbiAgICAgIGlmKHRoaXMuc2hvdWxkVW5waW4oY3VycmVudFNjcm9sbFksIHRvbGVyYW5jZUV4Y2VlZGVkKSkge1xuICAgICAgICB0aGlzLnVucGluKCk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmKHRoaXMuc2hvdWxkUGluKGN1cnJlbnRTY3JvbGxZLCB0b2xlcmFuY2VFeGNlZWRlZCkpIHtcbiAgICAgICAgdGhpcy5waW4oKTtcbiAgICAgIH1cbiAgXG4gICAgICB0aGlzLmxhc3RLbm93blNjcm9sbFkgPSBjdXJyZW50U2Nyb2xsWTtcbiAgICB9XG4gIH07XG4gIC8qKlxuICAgKiBEZWZhdWx0IG9wdGlvbnNcbiAgICogQHR5cGUge09iamVjdH1cbiAgICovXG4gIEhlYWRyb29tLm9wdGlvbnMgPSB7XG4gICAgdG9sZXJhbmNlIDoge1xuICAgICAgdXAgOiAwLFxuICAgICAgZG93biA6IDBcbiAgICB9LFxuICAgIG9mZnNldCA6IDAsXG4gICAgc2Nyb2xsZXI6IHdpbmRvdyxcbiAgICBjbGFzc2VzIDoge1xuICAgICAgcGlubmVkIDogJ2hlYWRyb29tLS1waW5uZWQnLFxuICAgICAgdW5waW5uZWQgOiAnaGVhZHJvb20tLXVucGlubmVkJyxcbiAgICAgIHRvcCA6ICdoZWFkcm9vbS0tdG9wJyxcbiAgICAgIG5vdFRvcCA6ICdoZWFkcm9vbS0tbm90LXRvcCcsXG4gICAgICBib3R0b20gOiAnaGVhZHJvb20tLWJvdHRvbScsXG4gICAgICBub3RCb3R0b20gOiAnaGVhZHJvb20tLW5vdC1ib3R0b20nLFxuICAgICAgaW5pdGlhbCA6ICdoZWFkcm9vbSdcbiAgICB9XG4gIH07XG4gIEhlYWRyb29tLmN1dHNUaGVNdXN0YXJkID0gdHlwZW9mIGZlYXR1cmVzICE9PSAndW5kZWZpbmVkJyAmJiBmZWF0dXJlcy5yQUYgJiYgZmVhdHVyZXMuYmluZCAmJiBmZWF0dXJlcy5jbGFzc0xpc3Q7XG5cbiAgcmV0dXJuIEhlYWRyb29tO1xufSkpOyIsIi8qIVxuICogaW4tdmlldyAwLjQuMyAtIEdldCBub3RpZmllZCB3aGVuIGEgRE9NIGVsZW1lbnQgZW50ZXJzIG9yIGV4aXRzIHRoZSB2aWV3cG9ydC5cbiAqIENvcHlyaWdodCAoYykgMjAxNiBDYW0gV2llZ2VydCA8Y2FtQGNhbXdpZWdlcnQuY29tPiAtIGh0dHBzOi8vY2Ftd2llZ2VydC5naXRodWIuaW8vaW4tdmlld1xuICogTGljZW5zZTogTUlUXG4gKi9cbiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtdLGUpOlwib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzP2V4cG9ydHMuaW5WaWV3PWUoKTp0LmluVmlldz1lKCl9KHRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCl7ZnVuY3Rpb24gZShyKXtpZihuW3JdKXJldHVybiBuW3JdLmV4cG9ydHM7dmFyIGk9bltyXT17ZXhwb3J0czp7fSxpZDpyLGxvYWRlZDohMX07cmV0dXJuIHRbcl0uY2FsbChpLmV4cG9ydHMsaSxpLmV4cG9ydHMsZSksaS5sb2FkZWQ9ITAsaS5leHBvcnRzfXZhciBuPXt9O3JldHVybiBlLm09dCxlLmM9bixlLnA9XCJcIixlKDApfShbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntcImRlZmF1bHRcIjp0fX12YXIgaT1uKDMpLG89cihpKTt0LmV4cG9ydHM9b1tcImRlZmF1bHRcIl19LGZ1bmN0aW9uKHQsZSl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gbih0LGUpe3ZhciBuPXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkscj1uLnRvcCxpPW4ucmlnaHQsbz1uLmJvdHRvbSx1PW4ubGVmdCxmPXt0Om8scjp3aW5kb3cuaW5uZXJXaWR0aC11LGI6d2luZG93LmlubmVySGVpZ2h0LXIsbDppfTtyZXR1cm4gZi50PmUudG9wJiZmLnI+ZS5yaWdodCYmZi5iPmUuYm90dG9tJiZmLmw+ZS5sZWZ0fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGUuaW5WaWV3cG9ydD1ufSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCl7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuISF0JiYoXCJvYmplY3RcIj09ZXx8XCJmdW5jdGlvblwiPT1lKX10LmV4cG9ydHM9bn0sZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntcImRlZmF1bHRcIjp0fX1PYmplY3QuZGVmaW5lUHJvcGVydHkoZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgaT1uKDkpLG89cihpKSx1PW4oNCksZj1yKHUpLGM9bigxKSxzPWZ1bmN0aW9uKCl7dmFyIHQ9MTAwLGU9W1wic2Nyb2xsXCIsXCJyZXNpemVcIixcImxvYWRcIl0sbj17aGlzdG9yeTpbXX0scj17fSxpPSgwLG9bXCJkZWZhdWx0XCJdKShmdW5jdGlvbigpe24uaGlzdG9yeS5mb3JFYWNoKGZ1bmN0aW9uKHQpe25bdF0uY2hlY2soKX0pfSx0KTtlLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIGFkZEV2ZW50TGlzdGVuZXIodCxpKX0pLHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyJiZuZXcgTXV0YXRpb25PYnNlcnZlcihpKS5vYnNlcnZlKGRvY3VtZW50LmJvZHkse2F0dHJpYnV0ZXM6ITAsY2hpbGRMaXN0OiEwLHN1YnRyZWU6ITB9KTt2YXIgdT1mdW5jdGlvbih0KXtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIGU9W10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHQpKTtyZXR1cm4gbi5oaXN0b3J5LmluZGV4T2YodCk+LTE/blt0XS5lbGVtZW50cz1lOihuW3RdPSgwLGZbXCJkZWZhdWx0XCJdKShlLHIpLG4uaGlzdG9yeS5wdXNoKHQpKSxuW3RdfX07cmV0dXJuIHUub2Zmc2V0PWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09PXQpcmV0dXJuIHI7dmFyIGU9ZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHR9O3JldHVybltcInRvcFwiLFwicmlnaHRcIixcImJvdHRvbVwiLFwibGVmdFwiXS5mb3JFYWNoKGUodCk/ZnVuY3Rpb24oZSl7cmV0dXJuIHJbZV09dH06ZnVuY3Rpb24obil7cmV0dXJuIGUodFtuXSk/cltuXT10W25dOm51bGx9KSxyfSx1LmlzPWZ1bmN0aW9uKHQpe3JldHVybigwLGMuaW5WaWV3cG9ydCkodCxyKX0sdS5vZmZzZXQoMCksdX07ZVtcImRlZmF1bHRcIl09cygpfSxmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gcih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciByPWVbbl07ci5lbnVtZXJhYmxlPXIuZW51bWVyYWJsZXx8ITEsci5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gciYmKHIud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LHIua2V5LHIpfX1yZXR1cm4gZnVuY3Rpb24oZSxuLHIpe3JldHVybiBuJiZ0KGUucHJvdG90eXBlLG4pLHImJnQoZSxyKSxlfX0oKSxvPW4oMSksdT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSxuKXtyKHRoaXMsdCksdGhpcy5vZmZzZXQ9bix0aGlzLmN1cnJlbnQ9W10sdGhpcy5lbGVtZW50cz1lLHRoaXMuaGFuZGxlcnM9e2VudGVyOltdLGV4aXQ6W119LHRoaXMuc2luZ2xlcz17ZW50ZXI6W10sZXhpdDpbXX19cmV0dXJuIGkodCxbe2tleTpcImNoZWNrXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiB0aGlzLmVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24oZSl7dmFyIG49KDAsby5pblZpZXdwb3J0KShlLHQub2Zmc2V0KSxyPXQuY3VycmVudC5pbmRleE9mKGUpLGk9cj4tMSx1PW4mJiFpLGY9IW4mJmk7dSYmKHQuY3VycmVudC5wdXNoKGUpLHQuZW1pdChcImVudGVyXCIsZSkpLGYmJih0LmN1cnJlbnQuc3BsaWNlKHIsMSksdC5lbWl0KFwiZXhpdFwiLGUpKX0pLHRoaXN9fSx7a2V5Olwib25cIix2YWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmhhbmRsZXJzW3RdLnB1c2goZSksdGhpc319LHtrZXk6XCJvbmNlXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5zaW5nbGVzW3RdLnVuc2hpZnQoZSksdGhpc319LHtrZXk6XCJlbWl0XCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtmb3IoO3RoaXMuc2luZ2xlc1t0XS5sZW5ndGg7KXRoaXMuc2luZ2xlc1t0XS5wb3AoKShlKTtmb3IodmFyIG49dGhpcy5oYW5kbGVyc1t0XS5sZW5ndGg7LS1uPi0xOyl0aGlzLmhhbmRsZXJzW3RdW25dKGUpO3JldHVybiB0aGlzfX1dKSx0fSgpO2VbXCJkZWZhdWx0XCJdPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB1KHQsZSl9fSxmdW5jdGlvbih0LGUpeyhmdW5jdGlvbihlKXt2YXIgbj1cIm9iamVjdFwiPT10eXBlb2YgZSYmZSYmZS5PYmplY3Q9PT1PYmplY3QmJmU7dC5leHBvcnRzPW59KS5jYWxsKGUsZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30oKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDUpLGk9XCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGYmJnNlbGYuT2JqZWN0PT09T2JqZWN0JiZzZWxmLG89cnx8aXx8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO3QuZXhwb3J0cz1vfSxmdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gcih0LGUsbil7ZnVuY3Rpb24gcihlKXt2YXIgbj1tLHI9eDtyZXR1cm4gbT14PXZvaWQgMCxFPWUsdz10LmFwcGx5KHIsbil9ZnVuY3Rpb24gYSh0KXtyZXR1cm4gRT10LGo9c2V0VGltZW91dChoLGUpLF8/cih0KTp3fWZ1bmN0aW9uIGwodCl7dmFyIG49dC1PLHI9dC1FLGk9ZS1uO3JldHVybiBNP3MoaSxnLXIpOml9ZnVuY3Rpb24gZCh0KXt2YXIgbj10LU8scj10LUU7cmV0dXJuIHZvaWQgMD09PU98fG4+PWV8fG48MHx8TSYmcj49Z31mdW5jdGlvbiBoKCl7dmFyIHQ9bygpO3JldHVybiBkKHQpP3AodCk6dm9pZChqPXNldFRpbWVvdXQoaCxsKHQpKSl9ZnVuY3Rpb24gcCh0KXtyZXR1cm4gaj12b2lkIDAsVCYmbT9yKHQpOihtPXg9dm9pZCAwLHcpfWZ1bmN0aW9uIHYoKXt2b2lkIDAhPT1qJiZjbGVhclRpbWVvdXQoaiksRT0wLG09Tz14PWo9dm9pZCAwfWZ1bmN0aW9uIHkoKXtyZXR1cm4gdm9pZCAwPT09aj93OnAobygpKX1mdW5jdGlvbiBiKCl7dmFyIHQ9bygpLG49ZCh0KTtpZihtPWFyZ3VtZW50cyx4PXRoaXMsTz10LG4pe2lmKHZvaWQgMD09PWopcmV0dXJuIGEoTyk7aWYoTSlyZXR1cm4gaj1zZXRUaW1lb3V0KGgsZSkscihPKX1yZXR1cm4gdm9pZCAwPT09aiYmKGo9c2V0VGltZW91dChoLGUpKSx3fXZhciBtLHgsZyx3LGosTyxFPTAsXz0hMSxNPSExLFQ9ITA7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKGYpO3JldHVybiBlPXUoZSl8fDAsaShuKSYmKF89ISFuLmxlYWRpbmcsTT1cIm1heFdhaXRcImluIG4sZz1NP2ModShuLm1heFdhaXQpfHwwLGUpOmcsVD1cInRyYWlsaW5nXCJpbiBuPyEhbi50cmFpbGluZzpUKSxiLmNhbmNlbD12LGIuZmx1c2g9eSxifXZhciBpPW4oMiksbz1uKDgpLHU9bigxMCksZj1cIkV4cGVjdGVkIGEgZnVuY3Rpb25cIixjPU1hdGgubWF4LHM9TWF0aC5taW47dC5leHBvcnRzPXJ9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1uKDYpLGk9ZnVuY3Rpb24oKXtyZXR1cm4gci5EYXRlLm5vdygpfTt0LmV4cG9ydHM9aX0sZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIHIodCxlLG4pe3ZhciByPSEwLGY9ITA7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKHUpO3JldHVybiBvKG4pJiYocj1cImxlYWRpbmdcImluIG4/ISFuLmxlYWRpbmc6cixmPVwidHJhaWxpbmdcImluIG4/ISFuLnRyYWlsaW5nOmYpLGkodCxlLHtsZWFkaW5nOnIsbWF4V2FpdDplLHRyYWlsaW5nOmZ9KX12YXIgaT1uKDcpLG89bigyKSx1PVwiRXhwZWN0ZWQgYSBmdW5jdGlvblwiO3QuZXhwb3J0cz1yfSxmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4odCl7cmV0dXJuIHR9dC5leHBvcnRzPW59XSl9KTsiLCJpbXBvcnQgQXBwQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXIvQXBwQ29udHJvbGxlcic7XG5cbm5ldyBBcHBDb250cm9sbGVyKCk7XG4iLCJpbXBvcnQgUm91dGVyTW9kdWxlIGZyb20gJy4uL21vZHVsZXMvcm91dGVyJztcbmltcG9ydCBBcnRpY2xlQ29udHJvbGxlciBmcm9tICcuL0FydGljbGVDb250cm9sbGVyJztcbmltcG9ydCBpblZpZXcgZnJvbSAnaW4tdmlldyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcENvbnRyb2xsZXIge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmluaXQoKTtcblx0XHR0aGlzLnJvdXRlcygpO1xuXHR9XG5cblx0aW5pdCgpIHtcblx0XHQvLyBMYXp5IGxvYWQgYmFja2dyb3VuZHNcblx0XHRpblZpZXcoJ1tkYXRhLWxhenktYmddJylcblx0XHRcdC5vbignZW50ZXInLCBlbCA9PiB0aGlzLnJlcGxhY2VCZyhlbCkpO1xuXHR9XG5cblx0cm91dGVzKCkge1xuXHRcdG5ldyBSb3V0ZXJNb2R1bGUoJ2FydGljbGVzJywgQXJ0aWNsZUNvbnRyb2xsZXIpO1xuXHR9XG5cblx0cmVwbGFjZUJnKHRhcmdldCkge1xuXHRcdHZhciBkYXRhID0gdGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1sYXp5LWJnJyk7XG5cdFx0dGFyZ2V0LnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IFwidXJsKFwiICsgZGF0YSArIFwiKVwiO1xuXHR9XG59IiwiaW1wb3J0IEhlYWRyb29tIGZyb20gJ2hlYWRyb29tLmpzL2Rpc3QvaGVhZHJvb20uanMnO1xuaW1wb3J0IGluVmlldyBmcm9tICdpbi12aWV3JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXJ0aWNsZUNvbnRyb2xsZXIge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmluc3RhbmNpYXRlU3RpY2t5QmFycygpO1xuXHRcdHRoaXMuc2Nyb2xsU2xpZGVyKCk7XG5cdH1cblxuXHRzY3JvbGxTbGlkZXIoKSB7XG5cdFx0Y29uc3QgYXJ0aWNsZUltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5mbC1jb250ZW50X19pbWcnKTtcblx0XHRjb25zdCB2aWV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZsLWFydGljbGUtbGF5b3V0X19sZWZ0X192aWV3Jyk7XG5cdFx0Y29uc3QgaXRlbXMgPSBuZXcgaW5WaWV3KCcuZmwtY29udGVudF9faW1nJyk7XG5cdFx0Y29uc29sZS5sb2coaXRlbXMpO1xuXHRcdGl0ZW1zXG5cdFx0Lm9uKCdlbnRlcicsIChlbCwgaSkgPT4ge1xuXHRcdFx0Y29uc3Qgc3JjID0gZWwuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpO1xuXHRcdFx0aWYgKHdpbmRvdy5pbm5lcldpZHRoID4gNzY4KSB7XG5cdFx0XHRcdHRoaXMuc2V0Vmlld0JnKHNyYywgdmlldyk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbC5zcmMgPSBzcmM7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cblxuXHRzZXRWaWV3Qmcoc3JjLCB2aWV3KSB7XG5cdFx0dmlldy5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBgdXJsKCR7c3JjfSlgO1xuXHR9XG5cblx0aW5zdGFuY2lhdGVTdGlja3lCYXJzKCkge1xuXHRcdGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mbC1iYXIuZmwtYmFyLS10b3AnKTtcblx0XHRjb25zdCBmb290ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmwtYmFyLmZsLWJhci0tYm90dG9tJyk7XG5cdFx0Y29uc3QgaGVhZHJvb21PcHRpb25zID0ge1xuXHRcdFx0dG9sZXJhbmNlIDoge1xuXHRcdFx0XHRkb3duIDogMTAsXG5cdFx0XHRcdHVwIDogMFxuXHRcdFx0fSxcblx0XHR9O1xuXHRcdGxldCBzdGlja3lIZWFkZXIgPSBuZXcgSGVhZHJvb20oaGVhZGVyLCBoZWFkcm9vbU9wdGlvbnMpO1xuXHRcdGxldCBzdGlja3lGb290ZXIgPSBuZXcgSGVhZHJvb20oZm9vdGVyLCBoZWFkcm9vbU9wdGlvbnMpO1xuXHRcdHN0aWNreUhlYWRlci5pbml0KCk7XG5cdFx0c3RpY2t5Rm9vdGVyLmluaXQoKTtcblx0fVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdXRlck1vZHVsZSB7XG5cdGNvbnN0cnVjdG9yKG1hdGNoLCBtb2R1bGUpIHtcblx0XHRpZiAodGhpcy5wYXRoTWF0Y2gobWF0Y2gpKSB7XG5cdFx0XHR0aGlzLmxvYWRNb2R1bGUobW9kdWxlKTtcblx0XHR9XG5cdH1cblxuXHRwYXRoTWF0Y2gobWF0Y2gpIHtcblx0XHR2YXIgbWF0Y2hlcyA9IGZhbHNlO1xuXHRcdHZhciBwYXRoID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KCcvJyk7XG5cblx0XHRpZiAocGF0aC5sZW5ndGggPCAyKSB7XG5cdFx0XHRwYXRoID0gJy8nO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRwYXRoID0gcGF0aFsyXVxuXHRcdH1cblxuXHRcdGlmIChwYXRoID09PSBtYXRjaCkge1xuXHRcdFx0bWF0Y2hlcyA9IHRydWU7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH1cblxuXHRsb2FkTW9kdWxlKG1vZHVsZSkge1xuXHRcdG5ldyBtb2R1bGU7XG5cdH1cbn0iXX0=
