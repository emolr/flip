!function t(e,n,o){function i(s,u){if(!n[s]){if(!e[s]){var c="function"==typeof require&&require;if(!u&&c)return c(s,!0);if(r)return r(s,!0);var l=new Error("Cannot find module '"+s+"'");throw l.code="MODULE_NOT_FOUND",l}var a=n[s]={exports:{}};e[s][0].call(a.exports,function(t){var n=e[s][1][t];return i(n?n:t)},a,a.exports,t,e,n,o)}return n[s].exports}for(var r="function"==typeof require&&require,s=0;s<o.length;s++)i(o[s]);return i}({1:[function(t,e,n){!function(t,o){"use strict";"function"==typeof define&&define.amd?define([],o):"object"==typeof n?e.exports=o():t.Headroom=o()}(this,function(){"use strict";function t(t){this.callback=t,this.ticking=!1}function e(t){return t&&"undefined"!=typeof window&&(t===window||t.nodeType)}function n(t){if(arguments.length<=0)throw new Error("Missing arguments in extend function");var o,i,r=t||{};for(i=1;i<arguments.length;i++){var s=arguments[i]||{};for(o in s)"object"!=typeof r[o]||e(r[o])?r[o]=r[o]||s[o]:r[o]=n(r[o],s[o])}return r}function o(t){return t===Object(t)?t:{down:t,up:t}}function i(t,e){e=n(e,i.options),this.lastKnownScrollY=0,this.elem=t,this.tolerance=o(e.tolerance),this.classes=e.classes,this.offset=e.offset,this.scroller=e.scroller,this.initialised=!1,this.onPin=e.onPin,this.onUnpin=e.onUnpin,this.onTop=e.onTop,this.onNotTop=e.onNotTop,this.onBottom=e.onBottom,this.onNotBottom=e.onNotBottom}var r={bind:!!function(){}.bind,classList:"classList"in document.documentElement,rAF:!!(window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame)};return window.requestAnimationFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame,t.prototype={constructor:t,update:function(){this.callback&&this.callback(),this.ticking=!1},requestTick:function(){this.ticking||(requestAnimationFrame(this.rafCallback||(this.rafCallback=this.update.bind(this))),this.ticking=!0)},handleEvent:function(){this.requestTick()}},i.prototype={constructor:i,init:function(){if(i.cutsTheMustard)return this.debouncer=new t(this.update.bind(this)),this.elem.classList.add(this.classes.initial),setTimeout(this.attachEvent.bind(this),100),this},destroy:function(){var t=this.classes;this.initialised=!1,this.elem.classList.remove(t.unpinned,t.pinned,t.top,t.notTop,t.initial),this.scroller.removeEventListener("scroll",this.debouncer,!1)},attachEvent:function(){this.initialised||(this.lastKnownScrollY=this.getScrollY(),this.initialised=!0,this.scroller.addEventListener("scroll",this.debouncer,!1),this.debouncer.handleEvent())},unpin:function(){var t=this.elem.classList,e=this.classes;!t.contains(e.pinned)&&t.contains(e.unpinned)||(t.add(e.unpinned),t.remove(e.pinned),this.onUnpin&&this.onUnpin.call(this))},pin:function(){var t=this.elem.classList,e=this.classes;t.contains(e.unpinned)&&(t.remove(e.unpinned),t.add(e.pinned),this.onPin&&this.onPin.call(this))},top:function(){var t=this.elem.classList,e=this.classes;t.contains(e.top)||(t.add(e.top),t.remove(e.notTop),this.onTop&&this.onTop.call(this))},notTop:function(){var t=this.elem.classList,e=this.classes;t.contains(e.notTop)||(t.add(e.notTop),t.remove(e.top),this.onNotTop&&this.onNotTop.call(this))},bottom:function(){var t=this.elem.classList,e=this.classes;t.contains(e.bottom)||(t.add(e.bottom),t.remove(e.notBottom),this.onBottom&&this.onBottom.call(this))},notBottom:function(){var t=this.elem.classList,e=this.classes;t.contains(e.notBottom)||(t.add(e.notBottom),t.remove(e.bottom),this.onNotBottom&&this.onNotBottom.call(this))},getScrollY:function(){return void 0!==this.scroller.pageYOffset?this.scroller.pageYOffset:void 0!==this.scroller.scrollTop?this.scroller.scrollTop:(document.documentElement||document.body.parentNode||document.body).scrollTop},getViewportHeight:function(){return window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight},getElementPhysicalHeight:function(t){return Math.max(t.offsetHeight,t.clientHeight)},getScrollerPhysicalHeight:function(){return this.scroller===window||this.scroller===document.body?this.getViewportHeight():this.getElementPhysicalHeight(this.scroller)},getDocumentHeight:function(){var t=document.body,e=document.documentElement;return Math.max(t.scrollHeight,e.scrollHeight,t.offsetHeight,e.offsetHeight,t.clientHeight,e.clientHeight)},getElementHeight:function(t){return Math.max(t.scrollHeight,t.offsetHeight,t.clientHeight)},getScrollerHeight:function(){return this.scroller===window||this.scroller===document.body?this.getDocumentHeight():this.getElementHeight(this.scroller)},isOutOfBounds:function(t){var e=t<0,n=t+this.getScrollerPhysicalHeight()>this.getScrollerHeight();return e||n},toleranceExceeded:function(t,e){return Math.abs(t-this.lastKnownScrollY)>=this.tolerance[e]},shouldUnpin:function(t,e){var n=t>this.lastKnownScrollY,o=t>=this.offset;return n&&o&&e},shouldPin:function(t,e){var n=t<this.lastKnownScrollY,o=t<=this.offset;return n&&e||o},update:function(){var t=this.getScrollY(),e=t>this.lastKnownScrollY?"down":"up",n=this.toleranceExceeded(t,e);this.isOutOfBounds(t)||(t<=this.offset?this.top():this.notTop(),t+this.getViewportHeight()>=this.getScrollerHeight()?this.bottom():this.notBottom(),this.shouldUnpin(t,n)?this.unpin():this.shouldPin(t,n)&&this.pin(),this.lastKnownScrollY=t)}},i.options={tolerance:{up:0,down:0},offset:0,scroller:window,classes:{pinned:"headroom--pinned",unpinned:"headroom--unpinned",top:"headroom--top",notTop:"headroom--not-top",bottom:"headroom--bottom",notBottom:"headroom--not-bottom",initial:"headroom"}},i.cutsTheMustard="undefined"!=typeof r&&r.rAF&&r.bind&&r.classList,i})},{}],2:[function(t,e,n){!function(t,o){"object"==typeof n&&"object"==typeof e?e.exports=o():"function"==typeof define&&define.amd?define([],o):"object"==typeof n?n.inView=o():t.inView=o()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return t[o].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function o(t){return t&&t.__esModule?t:{default:t}}var i=n(3),r=o(i);t.exports=r.default},function(t,e){"use strict";function n(t,e){var n=t.getBoundingClientRect(),o=n.top,i=n.right,r=n.bottom,s=n.left,u={t:r,r:window.innerWidth-s,b:window.innerHeight-o,l:i};return u.t>e.top&&u.r>e.right&&u.b>e.bottom&&u.l>e.left}Object.defineProperty(e,"__esModule",{value:!0}),e.inViewport=n},function(t,e){function n(t){var e=typeof t;return!!t&&("object"==e||"function"==e)}t.exports=n},function(t,e,n){"use strict";function o(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(e,"__esModule",{value:!0});var i=n(9),r=o(i),s=n(4),u=o(s),c=n(1),l=function(){var t=100,e=["scroll","resize","load"],n={history:[]},o={},i=(0,r.default)(function(){n.history.forEach(function(t){n[t].check()})},t);e.forEach(function(t){return addEventListener(t,i)}),window.MutationObserver&&new MutationObserver(i).observe(document.body,{attributes:!0,childList:!0,subtree:!0});var s=function(t){if("string"==typeof t){var e=[].slice.call(document.querySelectorAll(t));return n.history.indexOf(t)>-1?n[t].elements=e:(n[t]=(0,u.default)(e,o),n.history.push(t)),n[t]}};return s.offset=function(t){if(void 0===t)return o;var e=function(t){return"number"==typeof t};return["top","right","bottom","left"].forEach(e(t)?function(e){return o[e]=t}:function(n){return e(t[n])?o[n]=t[n]:null}),o},s.is=function(t){return(0,c.inViewport)(t,o)},s.offset(0),s};e.default=l()},function(t,e,n){"use strict";function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),r=n(1),s=function(){function t(e,n){o(this,t),this.offset=n,this.current=[],this.elements=e,this.handlers={enter:[],exit:[]},this.singles={enter:[],exit:[]}}return i(t,[{key:"check",value:function(){var t=this;return this.elements.forEach(function(e){var n=(0,r.inViewport)(e,t.offset),o=t.current.indexOf(e),i=o>-1,s=n&&!i,u=!n&&i;s&&(t.current.push(e),t.emit("enter",e)),u&&(t.current.splice(o,1),t.emit("exit",e))}),this}},{key:"on",value:function(t,e){return this.handlers[t].push(e),this}},{key:"once",value:function(t,e){return this.singles[t].unshift(e),this}},{key:"emit",value:function(t,e){for(;this.singles[t].length;)this.singles[t].pop()(e);for(var n=this.handlers[t].length;--n>-1;)this.handlers[t][n](e);return this}}]),t}();e.default=function(t,e){return new s(t,e)}},function(t,e){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(e,function(){return this}())},function(t,e,n){var o=n(5),i="object"==typeof self&&self&&self.Object===Object&&self,r=o||i||Function("return this")();t.exports=r},function(t,e,n){function o(t,e,n){function o(e){var n=b,o=w;return b=w=void 0,E=e,x=t.apply(o,n)}function a(t){return E=t,T=setTimeout(d,e),_?o(t):x}function f(t){var n=t-k,o=t-E,i=e-n;return H?l(i,y-o):i}function h(t){var n=t-k,o=t-E;return void 0===k||n>=e||n<0||H&&o>=y}function d(){var t=r();return h(t)?p(t):void(T=setTimeout(d,f(t)))}function p(t){return T=void 0,O&&b?o(t):(b=w=void 0,x)}function m(){void 0!==T&&clearTimeout(T),E=0,b=k=w=T=void 0}function v(){return void 0===T?x:p(r())}function g(){var t=r(),n=h(t);if(b=arguments,w=this,k=t,n){if(void 0===T)return a(k);if(H)return T=setTimeout(d,e),o(k)}return void 0===T&&(T=setTimeout(d,e)),x}var b,w,y,x,T,k,E=0,_=!1,H=!1,O=!0;if("function"!=typeof t)throw new TypeError(u);return e=s(e)||0,i(n)&&(_=!!n.leading,H="maxWait"in n,y=H?c(s(n.maxWait)||0,e):y,O="trailing"in n?!!n.trailing:O),g.cancel=m,g.flush=v,g}var i=n(2),r=n(8),s=n(10),u="Expected a function",c=Math.max,l=Math.min;t.exports=o},function(t,e,n){var o=n(6),i=function(){return o.Date.now()};t.exports=i},function(t,e,n){function o(t,e,n){var o=!0,u=!0;if("function"!=typeof t)throw new TypeError(s);return r(n)&&(o="leading"in n?!!n.leading:o,u="trailing"in n?!!n.trailing:u),i(t,e,{leading:o,maxWait:e,trailing:u})}var i=n(7),r=n(2),s="Expected a function";t.exports=o},function(t,e){function n(t){return t}t.exports=n}])})},{}],3:[function(t,e,n){"use strict";function o(t){return t&&t.__esModule?t:{default:t}}var i=t("./controller/AppController"),r=o(i);new r.default},{"./controller/AppController":4}],4:[function(t,e,n){"use strict";function o(t){return t&&t.__esModule?t:{default:t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),s=t("../modules/router"),u=o(s),c=t("./ArticleController"),l=o(c),a=t("in-view"),f=o(a),h=function(){function t(){i(this,t),this.init(),this.routes()}return r(t,[{key:"init",value:function(){var t=this;(0,f.default)("[data-lazy-bg]").on("enter",function(e){return t.replaceBg(e)})}},{key:"routes",value:function(){new u.default("articles",l.default)}},{key:"replaceBg",value:function(t){var e=t.getAttribute("data-lazy-bg");t.style.backgroundImage="url("+e}}]),t}();n.default=h},{"../modules/router":6,"./ArticleController":5,"in-view":2}],5:[function(t,e,n){"use strict";function o(t){return t&&t.__esModule?t:{default:t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),s=t("headroom.js/dist/headroom.js"),u=o(s),c=t("in-view"),l=o(c),a=function(){function t(){i(this,t),this.instanciateStickyBars(),this.scrollSlider()}return r(t,[{key:"scrollSlider",value:function(){var t=this,e=(document.querySelectorAll(".fl-content__img"),document.querySelector(".fl-article-layout__left__view")),n=new l.default(".fl-content__img");console.log(n),n.on("enter",function(n,o){console.log(n,"i",o);var i=n.getAttribute("data-src");t.setViewBg(i,e)})}},{key:"setViewBg",value:function(t,e){e.style.backgroundImage="url("+t+")"}},{key:"instanciateStickyBars",value:function(){var t=document.querySelector(".fl-bar.fl-bar--top"),e=document.querySelector(".fl-bar.fl-bar--bottom"),n={tolerance:{down:10,up:0}},o=new u.default(t,n),i=new u.default(e,n);o.init(),i.init()}}]),t}();n.default=a},{"headroom.js/dist/headroom.js":1,"in-view":2}],6:[function(t,e,n){"use strict";function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),r=function(){function t(e,n){o(this,t),this.pathMatch(e)&&this.loadModule(n)}return i(t,[{key:"pathMatch",value:function(t){var e=!1,n=window.location.pathname.split("/");return n=n.length<2?"/":n[2],n===t&&(e=!0),e}},{key:"loadModule",value:function(t){new t}}]),t}();n.default=r},{}]},{},[3]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
